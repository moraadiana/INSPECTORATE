//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 4.0.30319.42000.
// 
#pragma warning disable 1591

namespace INSPECTORATEStaff.NAVWS {
    using System.Diagnostics;
    using System;
    using System.Xml.Serialization;
    using System.ComponentModel;
    using System.Web.Services.Protocols;
    using System.Web.Services;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="WebPortals_Binding", Namespace="urn:microsoft-dynamics-schemas/codeunit/WebPortals")]
    public partial class WebPortals : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback ApproveDocumentOperationCompleted;
        
        private System.Threading.SendOrPostCallback AvailableLeaveDaysOperationCompleted;
        
        private System.Threading.SendOrPostCallback AvailableLeaveDayssOperationCompleted;
        
        private System.Threading.SendOrPostCallback Back2officedetailsOperationCompleted;
        
        private System.Threading.SendOrPostCallback BacktOfficeApplicationOperationCompleted;
        
        private System.Threading.SendOrPostCallback CalcEndDateOperationCompleted;
        
        private System.Threading.SendOrPostCallback CalcReturnDateOperationCompleted;
        
        private System.Threading.SendOrPostCallback CancelApprovalRequestOperationCompleted;
        
        private System.Threading.SendOrPostCallback CancelClaimRequisitionOperationCompleted;
        
        private System.Threading.SendOrPostCallback CancelDocumentOperationCompleted;
        
        private System.Threading.SendOrPostCallback CancelImprestRequisitionOperationCompleted;
        
        private System.Threading.SendOrPostCallback CancelPrnApprovalRequestOperationCompleted;
        
        private System.Threading.SendOrPostCallback CancelStoreRequisitionOperationCompleted;
        
        private System.Threading.SendOrPostCallback ChangeBidderPasswordOperationCompleted;
        
        private System.Threading.SendOrPostCallback ChangeStaffPasswordOperationCompleted;
        
        private System.Threading.SendOrPostCallback CheckBidderLoginForUnchangedPassOperationCompleted;
        
        private System.Threading.SendOrPostCallback CheckBidderLoginOperationCompleted;
        
        private System.Threading.SendOrPostCallback CheckBidderPasswordChangedOperationCompleted;
        
        private System.Threading.SendOrPostCallback CheckRecruitmentApplicantLoginOperationCompleted;
        
        private System.Threading.SendOrPostCallback CheckStaffLoginForUnchangedPassOperationCompleted;
        
        private System.Threading.SendOrPostCallback CheckStaffLoginOperationCompleted;
        
        private System.Threading.SendOrPostCallback CheckStaffPasswordChangedOperationCompleted;
        
        private System.Threading.SendOrPostCallback CheckValidBidderNoOperationCompleted;
        
        private System.Threading.SendOrPostCallback CheckValidStaffNoOperationCompleted;
        
        private System.Threading.SendOrPostCallback ClaimRequisitionApprovalRequestOperationCompleted;
        
        private System.Threading.SendOrPostCallback ClaimRequisitionCreateOperationCompleted;
        
        private System.Threading.SendOrPostCallback CreateBidderAccountOperationCompleted;
        
        private System.Threading.SendOrPostCallback CreateOnlineCustomerOperationCompleted;
        
        private System.Threading.SendOrPostCallback CreateRecruitmentAccountOperationCompleted;
        
        private System.Threading.SendOrPostCallback Create_Order_HeaderOperationCompleted;
        
        private System.Threading.SendOrPostCallback Create_Order_LinesOperationCompleted;
        
        private System.Threading.SendOrPostCallback DetermineIfIncludesNonWorkingOperationCompleted;
        
        private System.Threading.SendOrPostCallback DetermineIfIsNonWorkingOperationCompleted;
        
        private System.Threading.SendOrPostCallback DetermineLeaveReturnDateOperationCompleted;
        
        private System.Threading.SendOrPostCallback GenerateLeaveStatementOperationCompleted;
        
        private System.Threading.SendOrPostCallback GenerateMemoReportOperationCompleted;
        
        private System.Threading.SendOrPostCallback GeneratePaySlipReport1OperationCompleted;
        
        private System.Threading.SendOrPostCallback GeneratePaySlipReport3OperationCompleted;
        
        private System.Threading.SendOrPostCallback GeneratePayslipReportOperationCompleted;
        
        private System.Threading.SendOrPostCallback GenerateTenderAwardLetterOperationCompleted;
        
        private System.Threading.SendOrPostCallback Generatep9ReportOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetAdvertisedJobsOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetApprovalStatusOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetBidderCurrentPasswordOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetBidderMailOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetBidderProfileDetailsOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetCurrentPasswordOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetCurrentRecruitmentPasswordOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetLastPRNNoOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetLeaveDetailsOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetMonthNameOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetMyStoreRequisitionsOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetPRLEmployeeTransactionsOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetPRNHeaderDetailsOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetPayslipMonthsOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetPayslipYearsOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetProfilePictureOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetRecruitmentEmailAddressOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetStaffDetailsOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetStaffGenderOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetStaffMailOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetStaffProfileDetailsOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetVendorProfileDetailsOperationCompleted;
        
        private System.Threading.SendOrPostCallback HRCancelLeaveApplicationOperationCompleted;
        
        private System.Threading.SendOrPostCallback HRLeaveApplicationOperationCompleted;
        
        private System.Threading.SendOrPostCallback ImprestRequisitionApprovalRequestOperationCompleted;
        
        private System.Threading.SendOrPostCallback ImprestRequisitionCreateOperationCompleted;
        
        private System.Threading.SendOrPostCallback InsertApproverCommentsOperationCompleted;
        
        private System.Threading.SendOrPostCallback InsertClaimRequisitionLinesOperationCompleted;
        
        private System.Threading.SendOrPostCallback InsertImprestRequisitionLinesOperationCompleted;
        
        private System.Threading.SendOrPostCallback InsertJobApplicantQualificationsOperationCompleted;
        
        private System.Threading.SendOrPostCallback InsertQuotedAmountOperationCompleted;
        
        private System.Threading.SendOrPostCallback InsertStoreRequisitionLinesOperationCompleted;
        
        private System.Threading.SendOrPostCallback InsertTenderBidOperationCompleted;
        
        private System.Threading.SendOrPostCallback IsTenderBiddingPeriodOpenedOperationCompleted;
        
        private System.Threading.SendOrPostCallback PRNApprovalRequestOperationCompleted;
        
        private System.Threading.SendOrPostCallback PurchaseHeaderCreateOperationCompleted;
        
        private System.Threading.SendOrPostCallback RejectDocumentOperationCompleted;
        
        private System.Threading.SendOrPostCallback RemoveClaimReqLineOperationCompleted;
        
        private System.Threading.SendOrPostCallback RemoveImprestReqLineOperationCompleted;
        
        private System.Threading.SendOrPostCallback RemoveJobQualiReqLineOperationCompleted;
        
        private System.Threading.SendOrPostCallback RemovePurchaseLineOperationCompleted;
        
        private System.Threading.SendOrPostCallback RemoveStoreReqLineOperationCompleted;
        
        private System.Threading.SendOrPostCallback SaveMemoAttchmentsOperationCompleted;
        
        private System.Threading.SendOrPostCallback SaveMemoAttchmntsOperationCompleted;
        
        private System.Threading.SendOrPostCallback StoreRequisitionApprovalRequestOperationCompleted;
        
        private System.Threading.SendOrPostCallback StoresRequisitionCreateOperationCompleted;
        
        private System.Threading.SendOrPostCallback SubmitImprestSurrDetailsOperationCompleted;
        
        private System.Threading.SendOrPostCallback SubmitImprestSurrHeaderOperationCompleted;
        
        private System.Threading.SendOrPostCallback SubmitJobApplicationAttachmentsOperationCompleted;
        
        private System.Threading.SendOrPostCallback SubmitJobApplicationOperationCompleted;
        
        private System.Threading.SendOrPostCallback SubmitPurchaseLineOperationCompleted;
        
        private System.Threading.SendOrPostCallback SubmitStoreqDetailsOperationCompleted;
        
        private System.Threading.SendOrPostCallback SubmitStoreqHeaderOperationCompleted;
        
        private System.Threading.SendOrPostCallback SubmitbacktoOfficeOperationCompleted;
        
        private System.Threading.SendOrPostCallback TrainingApplicationOperationCompleted;
        
        private System.Threading.SendOrPostCallback TransportRequisitionApprovalRequestOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateStaffPassOperationCompleted;
        
        private System.Threading.SendOrPostCallback ValidRecruitmentEmailAddressOperationCompleted;
        
        private System.Threading.SendOrPostCallback ValidateCustomerNumberOperationCompleted;
        
        private System.Threading.SendOrPostCallback ValidateStartDateOperationCompleted;
        
        private System.Threading.SendOrPostCallback VerifyCurrentPasswordOperationCompleted;
        
        private System.Threading.SendOrPostCallback getEmployeeNameOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public WebPortals() {
            this.Url = global::INSPECTORATEStaff.Properties.Settings.Default.UFBstaff_NAVWS_webportals;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event ApproveDocumentCompletedEventHandler ApproveDocumentCompleted;
        
        /// <remarks/>
        public event AvailableLeaveDaysCompletedEventHandler AvailableLeaveDaysCompleted;
        
        /// <remarks/>
        public event AvailableLeaveDayssCompletedEventHandler AvailableLeaveDayssCompleted;
        
        /// <remarks/>
        public event Back2officedetailsCompletedEventHandler Back2officedetailsCompleted;
        
        /// <remarks/>
        public event BacktOfficeApplicationCompletedEventHandler BacktOfficeApplicationCompleted;
        
        /// <remarks/>
        public event CalcEndDateCompletedEventHandler CalcEndDateCompleted;
        
        /// <remarks/>
        public event CalcReturnDateCompletedEventHandler CalcReturnDateCompleted;
        
        /// <remarks/>
        public event CancelApprovalRequestCompletedEventHandler CancelApprovalRequestCompleted;
        
        /// <remarks/>
        public event CancelClaimRequisitionCompletedEventHandler CancelClaimRequisitionCompleted;
        
        /// <remarks/>
        public event CancelDocumentCompletedEventHandler CancelDocumentCompleted;
        
        /// <remarks/>
        public event CancelImprestRequisitionCompletedEventHandler CancelImprestRequisitionCompleted;
        
        /// <remarks/>
        public event CancelPrnApprovalRequestCompletedEventHandler CancelPrnApprovalRequestCompleted;
        
        /// <remarks/>
        public event CancelStoreRequisitionCompletedEventHandler CancelStoreRequisitionCompleted;
        
        /// <remarks/>
        public event ChangeBidderPasswordCompletedEventHandler ChangeBidderPasswordCompleted;
        
        /// <remarks/>
        public event ChangeStaffPasswordCompletedEventHandler ChangeStaffPasswordCompleted;
        
        /// <remarks/>
        public event CheckBidderLoginForUnchangedPassCompletedEventHandler CheckBidderLoginForUnchangedPassCompleted;
        
        /// <remarks/>
        public event CheckBidderLoginCompletedEventHandler CheckBidderLoginCompleted;
        
        /// <remarks/>
        public event CheckBidderPasswordChangedCompletedEventHandler CheckBidderPasswordChangedCompleted;
        
        /// <remarks/>
        public event CheckRecruitmentApplicantLoginCompletedEventHandler CheckRecruitmentApplicantLoginCompleted;
        
        /// <remarks/>
        public event CheckStaffLoginForUnchangedPassCompletedEventHandler CheckStaffLoginForUnchangedPassCompleted;
        
        /// <remarks/>
        public event CheckStaffLoginCompletedEventHandler CheckStaffLoginCompleted;
        
        /// <remarks/>
        public event CheckStaffPasswordChangedCompletedEventHandler CheckStaffPasswordChangedCompleted;
        
        /// <remarks/>
        public event CheckValidBidderNoCompletedEventHandler CheckValidBidderNoCompleted;
        
        /// <remarks/>
        public event CheckValidStaffNoCompletedEventHandler CheckValidStaffNoCompleted;
        
        /// <remarks/>
        public event ClaimRequisitionApprovalRequestCompletedEventHandler ClaimRequisitionApprovalRequestCompleted;
        
        /// <remarks/>
        public event ClaimRequisitionCreateCompletedEventHandler ClaimRequisitionCreateCompleted;
        
        /// <remarks/>
        public event CreateBidderAccountCompletedEventHandler CreateBidderAccountCompleted;
        
        /// <remarks/>
        public event CreateOnlineCustomerCompletedEventHandler CreateOnlineCustomerCompleted;
        
        /// <remarks/>
        public event CreateRecruitmentAccountCompletedEventHandler CreateRecruitmentAccountCompleted;
        
        /// <remarks/>
        public event Create_Order_HeaderCompletedEventHandler Create_Order_HeaderCompleted;
        
        /// <remarks/>
        public event Create_Order_LinesCompletedEventHandler Create_Order_LinesCompleted;
        
        /// <remarks/>
        public event DetermineIfIncludesNonWorkingCompletedEventHandler DetermineIfIncludesNonWorkingCompleted;
        
        /// <remarks/>
        public event DetermineIfIsNonWorkingCompletedEventHandler DetermineIfIsNonWorkingCompleted;
        
        /// <remarks/>
        public event DetermineLeaveReturnDateCompletedEventHandler DetermineLeaveReturnDateCompleted;
        
        /// <remarks/>
        public event GenerateLeaveStatementCompletedEventHandler GenerateLeaveStatementCompleted;
        
        /// <remarks/>
        public event GenerateMemoReportCompletedEventHandler GenerateMemoReportCompleted;
        
        /// <remarks/>
        public event GeneratePaySlipReport1CompletedEventHandler GeneratePaySlipReport1Completed;
        
        /// <remarks/>
        public event GeneratePaySlipReport3CompletedEventHandler GeneratePaySlipReport3Completed;
        
        /// <remarks/>
        public event GeneratePayslipReportCompletedEventHandler GeneratePayslipReportCompleted;
        
        /// <remarks/>
        public event GenerateTenderAwardLetterCompletedEventHandler GenerateTenderAwardLetterCompleted;
        
        /// <remarks/>
        public event Generatep9ReportCompletedEventHandler Generatep9ReportCompleted;
        
        /// <remarks/>
        public event GetAdvertisedJobsCompletedEventHandler GetAdvertisedJobsCompleted;
        
        /// <remarks/>
        public event GetApprovalStatusCompletedEventHandler GetApprovalStatusCompleted;
        
        /// <remarks/>
        public event GetBidderCurrentPasswordCompletedEventHandler GetBidderCurrentPasswordCompleted;
        
        /// <remarks/>
        public event GetBidderMailCompletedEventHandler GetBidderMailCompleted;
        
        /// <remarks/>
        public event GetBidderProfileDetailsCompletedEventHandler GetBidderProfileDetailsCompleted;
        
        /// <remarks/>
        public event GetCurrentPasswordCompletedEventHandler GetCurrentPasswordCompleted;
        
        /// <remarks/>
        public event GetCurrentRecruitmentPasswordCompletedEventHandler GetCurrentRecruitmentPasswordCompleted;
        
        /// <remarks/>
        public event GetLastPRNNoCompletedEventHandler GetLastPRNNoCompleted;
        
        /// <remarks/>
        public event GetLeaveDetailsCompletedEventHandler GetLeaveDetailsCompleted;
        
        /// <remarks/>
        public event GetMonthNameCompletedEventHandler GetMonthNameCompleted;
        
        /// <remarks/>
        public event GetMyStoreRequisitionsCompletedEventHandler GetMyStoreRequisitionsCompleted;
        
        /// <remarks/>
        public event GetPRLEmployeeTransactionsCompletedEventHandler GetPRLEmployeeTransactionsCompleted;
        
        /// <remarks/>
        public event GetPRNHeaderDetailsCompletedEventHandler GetPRNHeaderDetailsCompleted;
        
        /// <remarks/>
        public event GetPayslipMonthsCompletedEventHandler GetPayslipMonthsCompleted;
        
        /// <remarks/>
        public event GetPayslipYearsCompletedEventHandler GetPayslipYearsCompleted;
        
        /// <remarks/>
        public event GetProfilePictureCompletedEventHandler GetProfilePictureCompleted;
        
        /// <remarks/>
        public event GetRecruitmentEmailAddressCompletedEventHandler GetRecruitmentEmailAddressCompleted;
        
        /// <remarks/>
        public event GetStaffDetailsCompletedEventHandler GetStaffDetailsCompleted;
        
        /// <remarks/>
        public event GetStaffGenderCompletedEventHandler GetStaffGenderCompleted;
        
        /// <remarks/>
        public event GetStaffMailCompletedEventHandler GetStaffMailCompleted;
        
        /// <remarks/>
        public event GetStaffProfileDetailsCompletedEventHandler GetStaffProfileDetailsCompleted;
        
        /// <remarks/>
        public event GetVendorProfileDetailsCompletedEventHandler GetVendorProfileDetailsCompleted;
        
        /// <remarks/>
        public event HRCancelLeaveApplicationCompletedEventHandler HRCancelLeaveApplicationCompleted;
        
        /// <remarks/>
        public event HRLeaveApplicationCompletedEventHandler HRLeaveApplicationCompleted;
        
        /// <remarks/>
        public event ImprestRequisitionApprovalRequestCompletedEventHandler ImprestRequisitionApprovalRequestCompleted;
        
        /// <remarks/>
        public event ImprestRequisitionCreateCompletedEventHandler ImprestRequisitionCreateCompleted;
        
        /// <remarks/>
        public event InsertApproverCommentsCompletedEventHandler InsertApproverCommentsCompleted;
        
        /// <remarks/>
        public event InsertClaimRequisitionLinesCompletedEventHandler InsertClaimRequisitionLinesCompleted;
        
        /// <remarks/>
        public event InsertImprestRequisitionLinesCompletedEventHandler InsertImprestRequisitionLinesCompleted;
        
        /// <remarks/>
        public event InsertJobApplicantQualificationsCompletedEventHandler InsertJobApplicantQualificationsCompleted;
        
        /// <remarks/>
        public event InsertQuotedAmountCompletedEventHandler InsertQuotedAmountCompleted;
        
        /// <remarks/>
        public event InsertStoreRequisitionLinesCompletedEventHandler InsertStoreRequisitionLinesCompleted;
        
        /// <remarks/>
        public event InsertTenderBidCompletedEventHandler InsertTenderBidCompleted;
        
        /// <remarks/>
        public event IsTenderBiddingPeriodOpenedCompletedEventHandler IsTenderBiddingPeriodOpenedCompleted;
        
        /// <remarks/>
        public event PRNApprovalRequestCompletedEventHandler PRNApprovalRequestCompleted;
        
        /// <remarks/>
        public event PurchaseHeaderCreateCompletedEventHandler PurchaseHeaderCreateCompleted;
        
        /// <remarks/>
        public event RejectDocumentCompletedEventHandler RejectDocumentCompleted;
        
        /// <remarks/>
        public event RemoveClaimReqLineCompletedEventHandler RemoveClaimReqLineCompleted;
        
        /// <remarks/>
        public event RemoveImprestReqLineCompletedEventHandler RemoveImprestReqLineCompleted;
        
        /// <remarks/>
        public event RemoveJobQualiReqLineCompletedEventHandler RemoveJobQualiReqLineCompleted;
        
        /// <remarks/>
        public event RemovePurchaseLineCompletedEventHandler RemovePurchaseLineCompleted;
        
        /// <remarks/>
        public event RemoveStoreReqLineCompletedEventHandler RemoveStoreReqLineCompleted;
        
        /// <remarks/>
        public event SaveMemoAttchmentsCompletedEventHandler SaveMemoAttchmentsCompleted;
        
        /// <remarks/>
        public event SaveMemoAttchmntsCompletedEventHandler SaveMemoAttchmntsCompleted;
        
        /// <remarks/>
        public event StoreRequisitionApprovalRequestCompletedEventHandler StoreRequisitionApprovalRequestCompleted;
        
        /// <remarks/>
        public event StoresRequisitionCreateCompletedEventHandler StoresRequisitionCreateCompleted;
        
        /// <remarks/>
        public event SubmitImprestSurrDetailsCompletedEventHandler SubmitImprestSurrDetailsCompleted;
        
        /// <remarks/>
        public event SubmitImprestSurrHeaderCompletedEventHandler SubmitImprestSurrHeaderCompleted;
        
        /// <remarks/>
        public event SubmitJobApplicationAttachmentsCompletedEventHandler SubmitJobApplicationAttachmentsCompleted;
        
        /// <remarks/>
        public event SubmitJobApplicationCompletedEventHandler SubmitJobApplicationCompleted;
        
        /// <remarks/>
        public event SubmitPurchaseLineCompletedEventHandler SubmitPurchaseLineCompleted;
        
        /// <remarks/>
        public event SubmitStoreqDetailsCompletedEventHandler SubmitStoreqDetailsCompleted;
        
        /// <remarks/>
        public event SubmitStoreqHeaderCompletedEventHandler SubmitStoreqHeaderCompleted;
        
        /// <remarks/>
        public event SubmitbacktoOfficeCompletedEventHandler SubmitbacktoOfficeCompleted;
        
        /// <remarks/>
        public event TrainingApplicationCompletedEventHandler TrainingApplicationCompleted;
        
        /// <remarks/>
        public event TransportRequisitionApprovalRequestCompletedEventHandler TransportRequisitionApprovalRequestCompleted;
        
        /// <remarks/>
        public event UpdateStaffPassCompletedEventHandler UpdateStaffPassCompleted;
        
        /// <remarks/>
        public event ValidRecruitmentEmailAddressCompletedEventHandler ValidRecruitmentEmailAddressCompleted;
        
        /// <remarks/>
        public event ValidateCustomerNumberCompletedEventHandler ValidateCustomerNumberCompleted;
        
        /// <remarks/>
        public event ValidateStartDateCompletedEventHandler ValidateStartDateCompleted;
        
        /// <remarks/>
        public event VerifyCurrentPasswordCompletedEventHandler VerifyCurrentPasswordCompleted;
        
        /// <remarks/>
        public event getEmployeeNameCompletedEventHandler getEmployeeNameCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/WebPortals:ApproveDocument", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/WebPortals", ResponseElementName="ApproveDocument_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/WebPortals", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void ApproveDocument(string documentNo, string documentType) {
            this.Invoke("ApproveDocument", new object[] {
                        documentNo,
                        documentType});
        }
        
        /// <remarks/>
        public void ApproveDocumentAsync(string documentNo, string documentType) {
            this.ApproveDocumentAsync(documentNo, documentType, null);
        }
        
        /// <remarks/>
        public void ApproveDocumentAsync(string documentNo, string documentType, object userState) {
            if ((this.ApproveDocumentOperationCompleted == null)) {
                this.ApproveDocumentOperationCompleted = new System.Threading.SendOrPostCallback(this.OnApproveDocumentOperationCompleted);
            }
            this.InvokeAsync("ApproveDocument", new object[] {
                        documentNo,
                        documentType}, this.ApproveDocumentOperationCompleted, userState);
        }
        
        private void OnApproveDocumentOperationCompleted(object arg) {
            if ((this.ApproveDocumentCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ApproveDocumentCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/WebPortals:AvailableLeaveDays", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/WebPortals", ResponseElementName="AvailableLeaveDays_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/WebPortals", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string AvailableLeaveDays(string employeeNo, string leaveType) {
            object[] results = this.Invoke("AvailableLeaveDays", new object[] {
                        employeeNo,
                        leaveType});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void AvailableLeaveDaysAsync(string employeeNo, string leaveType) {
            this.AvailableLeaveDaysAsync(employeeNo, leaveType, null);
        }
        
        /// <remarks/>
        public void AvailableLeaveDaysAsync(string employeeNo, string leaveType, object userState) {
            if ((this.AvailableLeaveDaysOperationCompleted == null)) {
                this.AvailableLeaveDaysOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAvailableLeaveDaysOperationCompleted);
            }
            this.InvokeAsync("AvailableLeaveDays", new object[] {
                        employeeNo,
                        leaveType}, this.AvailableLeaveDaysOperationCompleted, userState);
        }
        
        private void OnAvailableLeaveDaysOperationCompleted(object arg) {
            if ((this.AvailableLeaveDaysCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AvailableLeaveDaysCompleted(this, new AvailableLeaveDaysCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/WebPortals:AvailableLeaveDayss", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/WebPortals", ResponseElementName="AvailableLeaveDayss_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/WebPortals", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string AvailableLeaveDayss(string employeeNo, string leaveType, string currentLeavePeriod) {
            object[] results = this.Invoke("AvailableLeaveDayss", new object[] {
                        employeeNo,
                        leaveType,
                        currentLeavePeriod});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void AvailableLeaveDayssAsync(string employeeNo, string leaveType, string currentLeavePeriod) {
            this.AvailableLeaveDayssAsync(employeeNo, leaveType, currentLeavePeriod, null);
        }
        
        /// <remarks/>
        public void AvailableLeaveDayssAsync(string employeeNo, string leaveType, string currentLeavePeriod, object userState) {
            if ((this.AvailableLeaveDayssOperationCompleted == null)) {
                this.AvailableLeaveDayssOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAvailableLeaveDayssOperationCompleted);
            }
            this.InvokeAsync("AvailableLeaveDayss", new object[] {
                        employeeNo,
                        leaveType,
                        currentLeavePeriod}, this.AvailableLeaveDayssOperationCompleted, userState);
        }
        
        private void OnAvailableLeaveDayssOperationCompleted(object arg) {
            if ((this.AvailableLeaveDayssCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AvailableLeaveDayssCompleted(this, new AvailableLeaveDayssCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/WebPortals:Back2officedetails", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/WebPortals", ResponseElementName="Back2officedetails_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/WebPortals", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string Back2officedetails(string documentNo, [System.Xml.Serialization.XmlElementAttribute(DataType="date")] System.DateTime actual, [System.Xml.Serialization.XmlElementAttribute(DataType="date")] System.DateTime returndt, string leaveNo) {
            object[] results = this.Invoke("Back2officedetails", new object[] {
                        documentNo,
                        actual,
                        returndt,
                        leaveNo});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void Back2officedetailsAsync(string documentNo, System.DateTime actual, System.DateTime returndt, string leaveNo) {
            this.Back2officedetailsAsync(documentNo, actual, returndt, leaveNo, null);
        }
        
        /// <remarks/>
        public void Back2officedetailsAsync(string documentNo, System.DateTime actual, System.DateTime returndt, string leaveNo, object userState) {
            if ((this.Back2officedetailsOperationCompleted == null)) {
                this.Back2officedetailsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnBack2officedetailsOperationCompleted);
            }
            this.InvokeAsync("Back2officedetails", new object[] {
                        documentNo,
                        actual,
                        returndt,
                        leaveNo}, this.Back2officedetailsOperationCompleted, userState);
        }
        
        private void OnBack2officedetailsOperationCompleted(object arg) {
            if ((this.Back2officedetailsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Back2officedetailsCompleted(this, new Back2officedetailsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/WebPortals:BacktOfficeApplication", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/WebPortals", ResponseElementName="BacktOfficeApplication_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/WebPortals", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string BacktOfficeApplication(string employeeNo, string leaveType, decimal appliedDays, [System.Xml.Serialization.XmlElementAttribute(DataType="date")] System.DateTime startDate, [System.Xml.Serialization.XmlElementAttribute(DataType="date")] System.DateTime endDate, [System.Xml.Serialization.XmlElementAttribute(DataType="date")] System.DateTime returnDate, string senderComments, string reliever, string relieverName, string employeeNm, string campuzc, string departmentz, string lvNo, decimal lvbal) {
            object[] results = this.Invoke("BacktOfficeApplication", new object[] {
                        employeeNo,
                        leaveType,
                        appliedDays,
                        startDate,
                        endDate,
                        returnDate,
                        senderComments,
                        reliever,
                        relieverName,
                        employeeNm,
                        campuzc,
                        departmentz,
                        lvNo,
                        lvbal});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void BacktOfficeApplicationAsync(string employeeNo, string leaveType, decimal appliedDays, System.DateTime startDate, System.DateTime endDate, System.DateTime returnDate, string senderComments, string reliever, string relieverName, string employeeNm, string campuzc, string departmentz, string lvNo, decimal lvbal) {
            this.BacktOfficeApplicationAsync(employeeNo, leaveType, appliedDays, startDate, endDate, returnDate, senderComments, reliever, relieverName, employeeNm, campuzc, departmentz, lvNo, lvbal, null);
        }
        
        /// <remarks/>
        public void BacktOfficeApplicationAsync(string employeeNo, string leaveType, decimal appliedDays, System.DateTime startDate, System.DateTime endDate, System.DateTime returnDate, string senderComments, string reliever, string relieverName, string employeeNm, string campuzc, string departmentz, string lvNo, decimal lvbal, object userState) {
            if ((this.BacktOfficeApplicationOperationCompleted == null)) {
                this.BacktOfficeApplicationOperationCompleted = new System.Threading.SendOrPostCallback(this.OnBacktOfficeApplicationOperationCompleted);
            }
            this.InvokeAsync("BacktOfficeApplication", new object[] {
                        employeeNo,
                        leaveType,
                        appliedDays,
                        startDate,
                        endDate,
                        returnDate,
                        senderComments,
                        reliever,
                        relieverName,
                        employeeNm,
                        campuzc,
                        departmentz,
                        lvNo,
                        lvbal}, this.BacktOfficeApplicationOperationCompleted, userState);
        }
        
        private void OnBacktOfficeApplicationOperationCompleted(object arg) {
            if ((this.BacktOfficeApplicationCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.BacktOfficeApplicationCompleted(this, new BacktOfficeApplicationCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/WebPortals:CalcEndDate", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/WebPortals", ResponseElementName="CalcEndDate_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/WebPortals", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value", DataType="date")]
        public System.DateTime CalcEndDate([System.Xml.Serialization.XmlElementAttribute(DataType="date")] System.DateTime sDate, int lDays, string leave_Type) {
            object[] results = this.Invoke("CalcEndDate", new object[] {
                        sDate,
                        lDays,
                        leave_Type});
            return ((System.DateTime)(results[0]));
        }
        
        /// <remarks/>
        public void CalcEndDateAsync(System.DateTime sDate, int lDays, string leave_Type) {
            this.CalcEndDateAsync(sDate, lDays, leave_Type, null);
        }
        
        /// <remarks/>
        public void CalcEndDateAsync(System.DateTime sDate, int lDays, string leave_Type, object userState) {
            if ((this.CalcEndDateOperationCompleted == null)) {
                this.CalcEndDateOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCalcEndDateOperationCompleted);
            }
            this.InvokeAsync("CalcEndDate", new object[] {
                        sDate,
                        lDays,
                        leave_Type}, this.CalcEndDateOperationCompleted, userState);
        }
        
        private void OnCalcEndDateOperationCompleted(object arg) {
            if ((this.CalcEndDateCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CalcEndDateCompleted(this, new CalcEndDateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/WebPortals:CalcReturnDate", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/WebPortals", ResponseElementName="CalcReturnDate_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/WebPortals", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value", DataType="date")]
        public System.DateTime CalcReturnDate([System.Xml.Serialization.XmlElementAttribute(DataType="date")] System.DateTime endDate, string leave_Type) {
            object[] results = this.Invoke("CalcReturnDate", new object[] {
                        endDate,
                        leave_Type});
            return ((System.DateTime)(results[0]));
        }
        
        /// <remarks/>
        public void CalcReturnDateAsync(System.DateTime endDate, string leave_Type) {
            this.CalcReturnDateAsync(endDate, leave_Type, null);
        }
        
        /// <remarks/>
        public void CalcReturnDateAsync(System.DateTime endDate, string leave_Type, object userState) {
            if ((this.CalcReturnDateOperationCompleted == null)) {
                this.CalcReturnDateOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCalcReturnDateOperationCompleted);
            }
            this.InvokeAsync("CalcReturnDate", new object[] {
                        endDate,
                        leave_Type}, this.CalcReturnDateOperationCompleted, userState);
        }
        
        private void OnCalcReturnDateOperationCompleted(object arg) {
            if ((this.CalcReturnDateCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CalcReturnDateCompleted(this, new CalcReturnDateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/WebPortals:CancelApprovalRequest", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/WebPortals", ResponseElementName="CancelApprovalRequest_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/WebPortals", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void CancelApprovalRequest(string reqNo) {
            this.Invoke("CancelApprovalRequest", new object[] {
                        reqNo});
        }
        
        /// <remarks/>
        public void CancelApprovalRequestAsync(string reqNo) {
            this.CancelApprovalRequestAsync(reqNo, null);
        }
        
        /// <remarks/>
        public void CancelApprovalRequestAsync(string reqNo, object userState) {
            if ((this.CancelApprovalRequestOperationCompleted == null)) {
                this.CancelApprovalRequestOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCancelApprovalRequestOperationCompleted);
            }
            this.InvokeAsync("CancelApprovalRequest", new object[] {
                        reqNo}, this.CancelApprovalRequestOperationCompleted, userState);
        }
        
        private void OnCancelApprovalRequestOperationCompleted(object arg) {
            if ((this.CancelApprovalRequestCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CancelApprovalRequestCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/WebPortals:CancelClaimRequisition", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/WebPortals", ResponseElementName="CancelClaimRequisition_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/WebPortals", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void CancelClaimRequisition(string reqNo) {
            this.Invoke("CancelClaimRequisition", new object[] {
                        reqNo});
        }
        
        /// <remarks/>
        public void CancelClaimRequisitionAsync(string reqNo) {
            this.CancelClaimRequisitionAsync(reqNo, null);
        }
        
        /// <remarks/>
        public void CancelClaimRequisitionAsync(string reqNo, object userState) {
            if ((this.CancelClaimRequisitionOperationCompleted == null)) {
                this.CancelClaimRequisitionOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCancelClaimRequisitionOperationCompleted);
            }
            this.InvokeAsync("CancelClaimRequisition", new object[] {
                        reqNo}, this.CancelClaimRequisitionOperationCompleted, userState);
        }
        
        private void OnCancelClaimRequisitionOperationCompleted(object arg) {
            if ((this.CancelClaimRequisitionCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CancelClaimRequisitionCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/WebPortals:CancelDocument", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/WebPortals", ResponseElementName="CancelDocument_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/WebPortals", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void CancelDocument(string documentNo, string senderID) {
            this.Invoke("CancelDocument", new object[] {
                        documentNo,
                        senderID});
        }
        
        /// <remarks/>
        public void CancelDocumentAsync(string documentNo, string senderID) {
            this.CancelDocumentAsync(documentNo, senderID, null);
        }
        
        /// <remarks/>
        public void CancelDocumentAsync(string documentNo, string senderID, object userState) {
            if ((this.CancelDocumentOperationCompleted == null)) {
                this.CancelDocumentOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCancelDocumentOperationCompleted);
            }
            this.InvokeAsync("CancelDocument", new object[] {
                        documentNo,
                        senderID}, this.CancelDocumentOperationCompleted, userState);
        }
        
        private void OnCancelDocumentOperationCompleted(object arg) {
            if ((this.CancelDocumentCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CancelDocumentCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/WebPortals:CancelImprestRequisition", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/WebPortals", ResponseElementName="CancelImprestRequisition_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/WebPortals", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void CancelImprestRequisition(string reqNo) {
            this.Invoke("CancelImprestRequisition", new object[] {
                        reqNo});
        }
        
        /// <remarks/>
        public void CancelImprestRequisitionAsync(string reqNo) {
            this.CancelImprestRequisitionAsync(reqNo, null);
        }
        
        /// <remarks/>
        public void CancelImprestRequisitionAsync(string reqNo, object userState) {
            if ((this.CancelImprestRequisitionOperationCompleted == null)) {
                this.CancelImprestRequisitionOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCancelImprestRequisitionOperationCompleted);
            }
            this.InvokeAsync("CancelImprestRequisition", new object[] {
                        reqNo}, this.CancelImprestRequisitionOperationCompleted, userState);
        }
        
        private void OnCancelImprestRequisitionOperationCompleted(object arg) {
            if ((this.CancelImprestRequisitionCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CancelImprestRequisitionCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/WebPortals:CancelPrnApprovalRequest", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/WebPortals", ResponseElementName="CancelPrnApprovalRequest_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/WebPortals", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void CancelPrnApprovalRequest(string reqNo) {
            this.Invoke("CancelPrnApprovalRequest", new object[] {
                        reqNo});
        }
        
        /// <remarks/>
        public void CancelPrnApprovalRequestAsync(string reqNo) {
            this.CancelPrnApprovalRequestAsync(reqNo, null);
        }
        
        /// <remarks/>
        public void CancelPrnApprovalRequestAsync(string reqNo, object userState) {
            if ((this.CancelPrnApprovalRequestOperationCompleted == null)) {
                this.CancelPrnApprovalRequestOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCancelPrnApprovalRequestOperationCompleted);
            }
            this.InvokeAsync("CancelPrnApprovalRequest", new object[] {
                        reqNo}, this.CancelPrnApprovalRequestOperationCompleted, userState);
        }
        
        private void OnCancelPrnApprovalRequestOperationCompleted(object arg) {
            if ((this.CancelPrnApprovalRequestCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CancelPrnApprovalRequestCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/WebPortals:CancelStoreRequisition", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/WebPortals", ResponseElementName="CancelStoreRequisition_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/WebPortals", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void CancelStoreRequisition(string reqNo) {
            this.Invoke("CancelStoreRequisition", new object[] {
                        reqNo});
        }
        
        /// <remarks/>
        public void CancelStoreRequisitionAsync(string reqNo) {
            this.CancelStoreRequisitionAsync(reqNo, null);
        }
        
        /// <remarks/>
        public void CancelStoreRequisitionAsync(string reqNo, object userState) {
            if ((this.CancelStoreRequisitionOperationCompleted == null)) {
                this.CancelStoreRequisitionOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCancelStoreRequisitionOperationCompleted);
            }
            this.InvokeAsync("CancelStoreRequisition", new object[] {
                        reqNo}, this.CancelStoreRequisitionOperationCompleted, userState);
        }
        
        private void OnCancelStoreRequisitionOperationCompleted(object arg) {
            if ((this.CancelStoreRequisitionCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CancelStoreRequisitionCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/WebPortals:ChangeBidderPassword", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/WebPortals", ResponseElementName="ChangeBidderPassword_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/WebPortals", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string ChangeBidderPassword(string username, string password) {
            object[] results = this.Invoke("ChangeBidderPassword", new object[] {
                        username,
                        password});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void ChangeBidderPasswordAsync(string username, string password) {
            this.ChangeBidderPasswordAsync(username, password, null);
        }
        
        /// <remarks/>
        public void ChangeBidderPasswordAsync(string username, string password, object userState) {
            if ((this.ChangeBidderPasswordOperationCompleted == null)) {
                this.ChangeBidderPasswordOperationCompleted = new System.Threading.SendOrPostCallback(this.OnChangeBidderPasswordOperationCompleted);
            }
            this.InvokeAsync("ChangeBidderPassword", new object[] {
                        username,
                        password}, this.ChangeBidderPasswordOperationCompleted, userState);
        }
        
        private void OnChangeBidderPasswordOperationCompleted(object arg) {
            if ((this.ChangeBidderPasswordCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ChangeBidderPasswordCompleted(this, new ChangeBidderPasswordCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/WebPortals:ChangeStaffPassword", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/WebPortals", ResponseElementName="ChangeStaffPassword_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/WebPortals", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string ChangeStaffPassword(string username, string password) {
            object[] results = this.Invoke("ChangeStaffPassword", new object[] {
                        username,
                        password});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void ChangeStaffPasswordAsync(string username, string password) {
            this.ChangeStaffPasswordAsync(username, password, null);
        }
        
        /// <remarks/>
        public void ChangeStaffPasswordAsync(string username, string password, object userState) {
            if ((this.ChangeStaffPasswordOperationCompleted == null)) {
                this.ChangeStaffPasswordOperationCompleted = new System.Threading.SendOrPostCallback(this.OnChangeStaffPasswordOperationCompleted);
            }
            this.InvokeAsync("ChangeStaffPassword", new object[] {
                        username,
                        password}, this.ChangeStaffPasswordOperationCompleted, userState);
        }
        
        private void OnChangeStaffPasswordOperationCompleted(object arg) {
            if ((this.ChangeStaffPasswordCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ChangeStaffPasswordCompleted(this, new ChangeStaffPasswordCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/WebPortals:CheckBidderLoginForUnchangedPa" +
            "ss", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/WebPortals", ResponseElementName="CheckBidderLoginForUnchangedPass_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/WebPortals", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string CheckBidderLoginForUnchangedPass(string username, string password) {
            object[] results = this.Invoke("CheckBidderLoginForUnchangedPass", new object[] {
                        username,
                        password});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void CheckBidderLoginForUnchangedPassAsync(string username, string password) {
            this.CheckBidderLoginForUnchangedPassAsync(username, password, null);
        }
        
        /// <remarks/>
        public void CheckBidderLoginForUnchangedPassAsync(string username, string password, object userState) {
            if ((this.CheckBidderLoginForUnchangedPassOperationCompleted == null)) {
                this.CheckBidderLoginForUnchangedPassOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCheckBidderLoginForUnchangedPassOperationCompleted);
            }
            this.InvokeAsync("CheckBidderLoginForUnchangedPass", new object[] {
                        username,
                        password}, this.CheckBidderLoginForUnchangedPassOperationCompleted, userState);
        }
        
        private void OnCheckBidderLoginForUnchangedPassOperationCompleted(object arg) {
            if ((this.CheckBidderLoginForUnchangedPassCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CheckBidderLoginForUnchangedPassCompleted(this, new CheckBidderLoginForUnchangedPassCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/WebPortals:CheckBidderLogin", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/WebPortals", ResponseElementName="CheckBidderLogin_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/WebPortals", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string CheckBidderLogin(string username, string userpassword) {
            object[] results = this.Invoke("CheckBidderLogin", new object[] {
                        username,
                        userpassword});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void CheckBidderLoginAsync(string username, string userpassword) {
            this.CheckBidderLoginAsync(username, userpassword, null);
        }
        
        /// <remarks/>
        public void CheckBidderLoginAsync(string username, string userpassword, object userState) {
            if ((this.CheckBidderLoginOperationCompleted == null)) {
                this.CheckBidderLoginOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCheckBidderLoginOperationCompleted);
            }
            this.InvokeAsync("CheckBidderLogin", new object[] {
                        username,
                        userpassword}, this.CheckBidderLoginOperationCompleted, userState);
        }
        
        private void OnCheckBidderLoginOperationCompleted(object arg) {
            if ((this.CheckBidderLoginCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CheckBidderLoginCompleted(this, new CheckBidderLoginCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/WebPortals:CheckBidderPasswordChanged", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/WebPortals", ResponseElementName="CheckBidderPasswordChanged_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/WebPortals", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string CheckBidderPasswordChanged(string username) {
            object[] results = this.Invoke("CheckBidderPasswordChanged", new object[] {
                        username});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void CheckBidderPasswordChangedAsync(string username) {
            this.CheckBidderPasswordChangedAsync(username, null);
        }
        
        /// <remarks/>
        public void CheckBidderPasswordChangedAsync(string username, object userState) {
            if ((this.CheckBidderPasswordChangedOperationCompleted == null)) {
                this.CheckBidderPasswordChangedOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCheckBidderPasswordChangedOperationCompleted);
            }
            this.InvokeAsync("CheckBidderPasswordChanged", new object[] {
                        username}, this.CheckBidderPasswordChangedOperationCompleted, userState);
        }
        
        private void OnCheckBidderPasswordChangedOperationCompleted(object arg) {
            if ((this.CheckBidderPasswordChangedCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CheckBidderPasswordChangedCompleted(this, new CheckBidderPasswordChangedCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/WebPortals:CheckRecruitmentApplicantLogin" +
            "", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/WebPortals", ResponseElementName="CheckRecruitmentApplicantLogin_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/WebPortals", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string CheckRecruitmentApplicantLogin(string username, string userpassword) {
            object[] results = this.Invoke("CheckRecruitmentApplicantLogin", new object[] {
                        username,
                        userpassword});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void CheckRecruitmentApplicantLoginAsync(string username, string userpassword) {
            this.CheckRecruitmentApplicantLoginAsync(username, userpassword, null);
        }
        
        /// <remarks/>
        public void CheckRecruitmentApplicantLoginAsync(string username, string userpassword, object userState) {
            if ((this.CheckRecruitmentApplicantLoginOperationCompleted == null)) {
                this.CheckRecruitmentApplicantLoginOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCheckRecruitmentApplicantLoginOperationCompleted);
            }
            this.InvokeAsync("CheckRecruitmentApplicantLogin", new object[] {
                        username,
                        userpassword}, this.CheckRecruitmentApplicantLoginOperationCompleted, userState);
        }
        
        private void OnCheckRecruitmentApplicantLoginOperationCompleted(object arg) {
            if ((this.CheckRecruitmentApplicantLoginCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CheckRecruitmentApplicantLoginCompleted(this, new CheckRecruitmentApplicantLoginCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/WebPortals:CheckStaffLoginForUnchangedPas" +
            "s", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/WebPortals", ResponseElementName="CheckStaffLoginForUnchangedPass_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/WebPortals", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string CheckStaffLoginForUnchangedPass(string username, string password) {
            object[] results = this.Invoke("CheckStaffLoginForUnchangedPass", new object[] {
                        username,
                        password});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void CheckStaffLoginForUnchangedPassAsync(string username, string password) {
            this.CheckStaffLoginForUnchangedPassAsync(username, password, null);
        }
        
        /// <remarks/>
        public void CheckStaffLoginForUnchangedPassAsync(string username, string password, object userState) {
            if ((this.CheckStaffLoginForUnchangedPassOperationCompleted == null)) {
                this.CheckStaffLoginForUnchangedPassOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCheckStaffLoginForUnchangedPassOperationCompleted);
            }
            this.InvokeAsync("CheckStaffLoginForUnchangedPass", new object[] {
                        username,
                        password}, this.CheckStaffLoginForUnchangedPassOperationCompleted, userState);
        }
        
        private void OnCheckStaffLoginForUnchangedPassOperationCompleted(object arg) {
            if ((this.CheckStaffLoginForUnchangedPassCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CheckStaffLoginForUnchangedPassCompleted(this, new CheckStaffLoginForUnchangedPassCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/WebPortals:CheckStaffLogin", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/WebPortals", ResponseElementName="CheckStaffLogin_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/WebPortals", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string CheckStaffLogin(string username, string userpassword) {
            object[] results = this.Invoke("CheckStaffLogin", new object[] {
                        username,
                        userpassword});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void CheckStaffLoginAsync(string username, string userpassword) {
            this.CheckStaffLoginAsync(username, userpassword, null);
        }
        
        /// <remarks/>
        public void CheckStaffLoginAsync(string username, string userpassword, object userState) {
            if ((this.CheckStaffLoginOperationCompleted == null)) {
                this.CheckStaffLoginOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCheckStaffLoginOperationCompleted);
            }
            this.InvokeAsync("CheckStaffLogin", new object[] {
                        username,
                        userpassword}, this.CheckStaffLoginOperationCompleted, userState);
        }
        
        private void OnCheckStaffLoginOperationCompleted(object arg) {
            if ((this.CheckStaffLoginCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CheckStaffLoginCompleted(this, new CheckStaffLoginCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/WebPortals:CheckStaffPasswordChanged", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/WebPortals", ResponseElementName="CheckStaffPasswordChanged_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/WebPortals", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string CheckStaffPasswordChanged(string username) {
            object[] results = this.Invoke("CheckStaffPasswordChanged", new object[] {
                        username});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void CheckStaffPasswordChangedAsync(string username) {
            this.CheckStaffPasswordChangedAsync(username, null);
        }
        
        /// <remarks/>
        public void CheckStaffPasswordChangedAsync(string username, object userState) {
            if ((this.CheckStaffPasswordChangedOperationCompleted == null)) {
                this.CheckStaffPasswordChangedOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCheckStaffPasswordChangedOperationCompleted);
            }
            this.InvokeAsync("CheckStaffPasswordChanged", new object[] {
                        username}, this.CheckStaffPasswordChangedOperationCompleted, userState);
        }
        
        private void OnCheckStaffPasswordChangedOperationCompleted(object arg) {
            if ((this.CheckStaffPasswordChangedCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CheckStaffPasswordChangedCompleted(this, new CheckStaffPasswordChangedCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/WebPortals:CheckValidBidderNo", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/WebPortals", ResponseElementName="CheckValidBidderNo_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/WebPortals", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string CheckValidBidderNo(string bidderNumber) {
            object[] results = this.Invoke("CheckValidBidderNo", new object[] {
                        bidderNumber});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void CheckValidBidderNoAsync(string bidderNumber) {
            this.CheckValidBidderNoAsync(bidderNumber, null);
        }
        
        /// <remarks/>
        public void CheckValidBidderNoAsync(string bidderNumber, object userState) {
            if ((this.CheckValidBidderNoOperationCompleted == null)) {
                this.CheckValidBidderNoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCheckValidBidderNoOperationCompleted);
            }
            this.InvokeAsync("CheckValidBidderNo", new object[] {
                        bidderNumber}, this.CheckValidBidderNoOperationCompleted, userState);
        }
        
        private void OnCheckValidBidderNoOperationCompleted(object arg) {
            if ((this.CheckValidBidderNoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CheckValidBidderNoCompleted(this, new CheckValidBidderNoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/WebPortals:CheckValidStaffNo", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/WebPortals", ResponseElementName="CheckValidStaffNo_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/WebPortals", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string CheckValidStaffNo(string username) {
            object[] results = this.Invoke("CheckValidStaffNo", new object[] {
                        username});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void CheckValidStaffNoAsync(string username) {
            this.CheckValidStaffNoAsync(username, null);
        }
        
        /// <remarks/>
        public void CheckValidStaffNoAsync(string username, object userState) {
            if ((this.CheckValidStaffNoOperationCompleted == null)) {
                this.CheckValidStaffNoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCheckValidStaffNoOperationCompleted);
            }
            this.InvokeAsync("CheckValidStaffNo", new object[] {
                        username}, this.CheckValidStaffNoOperationCompleted, userState);
        }
        
        private void OnCheckValidStaffNoOperationCompleted(object arg) {
            if ((this.CheckValidStaffNoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CheckValidStaffNoCompleted(this, new CheckValidStaffNoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/WebPortals:ClaimRequisitionApprovalReques" +
            "t", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/WebPortals", ResponseElementName="ClaimRequisitionApprovalRequest_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/WebPortals", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void ClaimRequisitionApprovalRequest(string reqNo) {
            this.Invoke("ClaimRequisitionApprovalRequest", new object[] {
                        reqNo});
        }
        
        /// <remarks/>
        public void ClaimRequisitionApprovalRequestAsync(string reqNo) {
            this.ClaimRequisitionApprovalRequestAsync(reqNo, null);
        }
        
        /// <remarks/>
        public void ClaimRequisitionApprovalRequestAsync(string reqNo, object userState) {
            if ((this.ClaimRequisitionApprovalRequestOperationCompleted == null)) {
                this.ClaimRequisitionApprovalRequestOperationCompleted = new System.Threading.SendOrPostCallback(this.OnClaimRequisitionApprovalRequestOperationCompleted);
            }
            this.InvokeAsync("ClaimRequisitionApprovalRequest", new object[] {
                        reqNo}, this.ClaimRequisitionApprovalRequestOperationCompleted, userState);
        }
        
        private void OnClaimRequisitionApprovalRequestOperationCompleted(object arg) {
            if ((this.ClaimRequisitionApprovalRequestCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ClaimRequisitionApprovalRequestCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/WebPortals:ClaimRequisitionCreate", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/WebPortals", ResponseElementName="ClaimRequisitionCreate_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/WebPortals", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string ClaimRequisitionCreate(string campusz, string departmentz, string campusName, string deptName, string rcentre, string username, string reason) {
            object[] results = this.Invoke("ClaimRequisitionCreate", new object[] {
                        campusz,
                        departmentz,
                        campusName,
                        deptName,
                        rcentre,
                        username,
                        reason});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void ClaimRequisitionCreateAsync(string campusz, string departmentz, string campusName, string deptName, string rcentre, string username, string reason) {
            this.ClaimRequisitionCreateAsync(campusz, departmentz, campusName, deptName, rcentre, username, reason, null);
        }
        
        /// <remarks/>
        public void ClaimRequisitionCreateAsync(string campusz, string departmentz, string campusName, string deptName, string rcentre, string username, string reason, object userState) {
            if ((this.ClaimRequisitionCreateOperationCompleted == null)) {
                this.ClaimRequisitionCreateOperationCompleted = new System.Threading.SendOrPostCallback(this.OnClaimRequisitionCreateOperationCompleted);
            }
            this.InvokeAsync("ClaimRequisitionCreate", new object[] {
                        campusz,
                        departmentz,
                        campusName,
                        deptName,
                        rcentre,
                        username,
                        reason}, this.ClaimRequisitionCreateOperationCompleted, userState);
        }
        
        private void OnClaimRequisitionCreateOperationCompleted(object arg) {
            if ((this.ClaimRequisitionCreateCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ClaimRequisitionCreateCompleted(this, new ClaimRequisitionCreateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/WebPortals:CreateBidderAccount", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/WebPortals", ResponseElementName="CreateBidderAccount_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/WebPortals", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string CreateBidderAccount(string compName, string postalAddress, string postalCode, string location, string compPhone, string compEmail, string contactPerson, string contactPersonPhone, string contactPersonEmail, string vatPin, string certificateOfIncorporation, string vATCertificate, string pinRegistrationCertificate, string taxCompliaceCertificate, string password) {
            object[] results = this.Invoke("CreateBidderAccount", new object[] {
                        compName,
                        postalAddress,
                        postalCode,
                        location,
                        compPhone,
                        compEmail,
                        contactPerson,
                        contactPersonPhone,
                        contactPersonEmail,
                        vatPin,
                        certificateOfIncorporation,
                        vATCertificate,
                        pinRegistrationCertificate,
                        taxCompliaceCertificate,
                        password});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void CreateBidderAccountAsync(string compName, string postalAddress, string postalCode, string location, string compPhone, string compEmail, string contactPerson, string contactPersonPhone, string contactPersonEmail, string vatPin, string certificateOfIncorporation, string vATCertificate, string pinRegistrationCertificate, string taxCompliaceCertificate, string password) {
            this.CreateBidderAccountAsync(compName, postalAddress, postalCode, location, compPhone, compEmail, contactPerson, contactPersonPhone, contactPersonEmail, vatPin, certificateOfIncorporation, vATCertificate, pinRegistrationCertificate, taxCompliaceCertificate, password, null);
        }
        
        /// <remarks/>
        public void CreateBidderAccountAsync(
                    string compName, 
                    string postalAddress, 
                    string postalCode, 
                    string location, 
                    string compPhone, 
                    string compEmail, 
                    string contactPerson, 
                    string contactPersonPhone, 
                    string contactPersonEmail, 
                    string vatPin, 
                    string certificateOfIncorporation, 
                    string vATCertificate, 
                    string pinRegistrationCertificate, 
                    string taxCompliaceCertificate, 
                    string password, 
                    object userState) {
            if ((this.CreateBidderAccountOperationCompleted == null)) {
                this.CreateBidderAccountOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCreateBidderAccountOperationCompleted);
            }
            this.InvokeAsync("CreateBidderAccount", new object[] {
                        compName,
                        postalAddress,
                        postalCode,
                        location,
                        compPhone,
                        compEmail,
                        contactPerson,
                        contactPersonPhone,
                        contactPersonEmail,
                        vatPin,
                        certificateOfIncorporation,
                        vATCertificate,
                        pinRegistrationCertificate,
                        taxCompliaceCertificate,
                        password}, this.CreateBidderAccountOperationCompleted, userState);
        }
        
        private void OnCreateBidderAccountOperationCompleted(object arg) {
            if ((this.CreateBidderAccountCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CreateBidderAccountCompleted(this, new CreateBidderAccountCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/WebPortals:CreateOnlineCustomer", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/WebPortals", ResponseElementName="CreateOnlineCustomer_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/WebPortals", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string CreateOnlineCustomer(string name, string email, string idNo, string phone, string address, string town, string password) {
            object[] results = this.Invoke("CreateOnlineCustomer", new object[] {
                        name,
                        email,
                        idNo,
                        phone,
                        address,
                        town,
                        password});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void CreateOnlineCustomerAsync(string name, string email, string idNo, string phone, string address, string town, string password) {
            this.CreateOnlineCustomerAsync(name, email, idNo, phone, address, town, password, null);
        }
        
        /// <remarks/>
        public void CreateOnlineCustomerAsync(string name, string email, string idNo, string phone, string address, string town, string password, object userState) {
            if ((this.CreateOnlineCustomerOperationCompleted == null)) {
                this.CreateOnlineCustomerOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCreateOnlineCustomerOperationCompleted);
            }
            this.InvokeAsync("CreateOnlineCustomer", new object[] {
                        name,
                        email,
                        idNo,
                        phone,
                        address,
                        town,
                        password}, this.CreateOnlineCustomerOperationCompleted, userState);
        }
        
        private void OnCreateOnlineCustomerOperationCompleted(object arg) {
            if ((this.CreateOnlineCustomerCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CreateOnlineCustomerCompleted(this, new CreateOnlineCustomerCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/WebPortals:CreateRecruitmentAccount", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/WebPortals", ResponseElementName="CreateRecruitmentAccount_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/WebPortals", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string CreateRecruitmentAccount(
                    int initialsz, 
                    string firstName, 
                    string middleName, 
                    string lastName, 
                    string postalAddress, 
                    string postalCode, 
                    string iDNumber, 
                    int genderz, 
                    string homePhoneNumber, 
                    string citizenshipz, 
                    int maritalStatus, 
                    int ethnicOrigin, 
                    int disabledz, 
                    string desabilityDetails, 
                    [System.Xml.Serialization.XmlElementAttribute(DataType="date")] System.DateTime doB, 
                    string kRAPINNumber, 
                    int applicantType, 
                    string emailAddress, 
                    string passwordz) {
            object[] results = this.Invoke("CreateRecruitmentAccount", new object[] {
                        initialsz,
                        firstName,
                        middleName,
                        lastName,
                        postalAddress,
                        postalCode,
                        iDNumber,
                        genderz,
                        homePhoneNumber,
                        citizenshipz,
                        maritalStatus,
                        ethnicOrigin,
                        disabledz,
                        desabilityDetails,
                        doB,
                        kRAPINNumber,
                        applicantType,
                        emailAddress,
                        passwordz});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void CreateRecruitmentAccountAsync(
                    int initialsz, 
                    string firstName, 
                    string middleName, 
                    string lastName, 
                    string postalAddress, 
                    string postalCode, 
                    string iDNumber, 
                    int genderz, 
                    string homePhoneNumber, 
                    string citizenshipz, 
                    int maritalStatus, 
                    int ethnicOrigin, 
                    int disabledz, 
                    string desabilityDetails, 
                    System.DateTime doB, 
                    string kRAPINNumber, 
                    int applicantType, 
                    string emailAddress, 
                    string passwordz) {
            this.CreateRecruitmentAccountAsync(initialsz, firstName, middleName, lastName, postalAddress, postalCode, iDNumber, genderz, homePhoneNumber, citizenshipz, maritalStatus, ethnicOrigin, disabledz, desabilityDetails, doB, kRAPINNumber, applicantType, emailAddress, passwordz, null);
        }
        
        /// <remarks/>
        public void CreateRecruitmentAccountAsync(
                    int initialsz, 
                    string firstName, 
                    string middleName, 
                    string lastName, 
                    string postalAddress, 
                    string postalCode, 
                    string iDNumber, 
                    int genderz, 
                    string homePhoneNumber, 
                    string citizenshipz, 
                    int maritalStatus, 
                    int ethnicOrigin, 
                    int disabledz, 
                    string desabilityDetails, 
                    System.DateTime doB, 
                    string kRAPINNumber, 
                    int applicantType, 
                    string emailAddress, 
                    string passwordz, 
                    object userState) {
            if ((this.CreateRecruitmentAccountOperationCompleted == null)) {
                this.CreateRecruitmentAccountOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCreateRecruitmentAccountOperationCompleted);
            }
            this.InvokeAsync("CreateRecruitmentAccount", new object[] {
                        initialsz,
                        firstName,
                        middleName,
                        lastName,
                        postalAddress,
                        postalCode,
                        iDNumber,
                        genderz,
                        homePhoneNumber,
                        citizenshipz,
                        maritalStatus,
                        ethnicOrigin,
                        disabledz,
                        desabilityDetails,
                        doB,
                        kRAPINNumber,
                        applicantType,
                        emailAddress,
                        passwordz}, this.CreateRecruitmentAccountOperationCompleted, userState);
        }
        
        private void OnCreateRecruitmentAccountOperationCompleted(object arg) {
            if ((this.CreateRecruitmentAccountCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CreateRecruitmentAccountCompleted(this, new CreateRecruitmentAccountCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/WebPortals:Create_Order_Header", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/WebPortals", ResponseElementName="Create_Order_Header_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/WebPortals", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string Create_Order_Header(string customerNo) {
            object[] results = this.Invoke("Create_Order_Header", new object[] {
                        customerNo});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void Create_Order_HeaderAsync(string customerNo) {
            this.Create_Order_HeaderAsync(customerNo, null);
        }
        
        /// <remarks/>
        public void Create_Order_HeaderAsync(string customerNo, object userState) {
            if ((this.Create_Order_HeaderOperationCompleted == null)) {
                this.Create_Order_HeaderOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCreate_Order_HeaderOperationCompleted);
            }
            this.InvokeAsync("Create_Order_Header", new object[] {
                        customerNo}, this.Create_Order_HeaderOperationCompleted, userState);
        }
        
        private void OnCreate_Order_HeaderOperationCompleted(object arg) {
            if ((this.Create_Order_HeaderCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Create_Order_HeaderCompleted(this, new Create_Order_HeaderCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/WebPortals:Create_Order_Lines", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/WebPortals", ResponseElementName="Create_Order_Lines_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/WebPortals", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string Create_Order_Lines(string itemNo, decimal unitPrice, decimal _Quantity, string customerNo, string orderNo) {
            object[] results = this.Invoke("Create_Order_Lines", new object[] {
                        itemNo,
                        unitPrice,
                        _Quantity,
                        customerNo,
                        orderNo});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void Create_Order_LinesAsync(string itemNo, decimal unitPrice, decimal _Quantity, string customerNo, string orderNo) {
            this.Create_Order_LinesAsync(itemNo, unitPrice, _Quantity, customerNo, orderNo, null);
        }
        
        /// <remarks/>
        public void Create_Order_LinesAsync(string itemNo, decimal unitPrice, decimal _Quantity, string customerNo, string orderNo, object userState) {
            if ((this.Create_Order_LinesOperationCompleted == null)) {
                this.Create_Order_LinesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCreate_Order_LinesOperationCompleted);
            }
            this.InvokeAsync("Create_Order_Lines", new object[] {
                        itemNo,
                        unitPrice,
                        _Quantity,
                        customerNo,
                        orderNo}, this.Create_Order_LinesOperationCompleted, userState);
        }
        
        private void OnCreate_Order_LinesOperationCompleted(object arg) {
            if ((this.Create_Order_LinesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Create_Order_LinesCompleted(this, new Create_Order_LinesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/WebPortals:DetermineIfIncludesNonWorking", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/WebPortals", ResponseElementName="DetermineIfIncludesNonWorking_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/WebPortals", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public bool DetermineIfIncludesNonWorking(ref string fLeaveCode) {
            object[] results = this.Invoke("DetermineIfIncludesNonWorking", new object[] {
                        fLeaveCode});
            fLeaveCode = ((string)(results[1]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void DetermineIfIncludesNonWorkingAsync(string fLeaveCode) {
            this.DetermineIfIncludesNonWorkingAsync(fLeaveCode, null);
        }
        
        /// <remarks/>
        public void DetermineIfIncludesNonWorkingAsync(string fLeaveCode, object userState) {
            if ((this.DetermineIfIncludesNonWorkingOperationCompleted == null)) {
                this.DetermineIfIncludesNonWorkingOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDetermineIfIncludesNonWorkingOperationCompleted);
            }
            this.InvokeAsync("DetermineIfIncludesNonWorking", new object[] {
                        fLeaveCode}, this.DetermineIfIncludesNonWorkingOperationCompleted, userState);
        }
        
        private void OnDetermineIfIncludesNonWorkingOperationCompleted(object arg) {
            if ((this.DetermineIfIncludesNonWorkingCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DetermineIfIncludesNonWorkingCompleted(this, new DetermineIfIncludesNonWorkingCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/WebPortals:DetermineIfIsNonWorking", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/WebPortals", ResponseElementName="DetermineIfIsNonWorking_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/WebPortals", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public bool DetermineIfIsNonWorking([System.Xml.Serialization.XmlElementAttribute(DataType="date")] ref System.DateTime bcDate, ref string leave_Type) {
            object[] results = this.Invoke("DetermineIfIsNonWorking", new object[] {
                        bcDate,
                        leave_Type});
            bcDate = ((System.DateTime)(results[1]));
            leave_Type = ((string)(results[2]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void DetermineIfIsNonWorkingAsync(System.DateTime bcDate, string leave_Type) {
            this.DetermineIfIsNonWorkingAsync(bcDate, leave_Type, null);
        }
        
        /// <remarks/>
        public void DetermineIfIsNonWorkingAsync(System.DateTime bcDate, string leave_Type, object userState) {
            if ((this.DetermineIfIsNonWorkingOperationCompleted == null)) {
                this.DetermineIfIsNonWorkingOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDetermineIfIsNonWorkingOperationCompleted);
            }
            this.InvokeAsync("DetermineIfIsNonWorking", new object[] {
                        bcDate,
                        leave_Type}, this.DetermineIfIsNonWorkingOperationCompleted, userState);
        }
        
        private void OnDetermineIfIsNonWorkingOperationCompleted(object arg) {
            if ((this.DetermineIfIsNonWorkingCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DetermineIfIsNonWorkingCompleted(this, new DetermineIfIsNonWorkingCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/WebPortals:DetermineLeaveReturnDate", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/WebPortals", ResponseElementName="DetermineLeaveReturnDate_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/WebPortals", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value", DataType="date")]
        public System.DateTime DetermineLeaveReturnDate([System.Xml.Serialization.XmlElementAttribute(DataType="date")] System.DateTime fBeginDate, decimal fDays, string leave_Type) {
            object[] results = this.Invoke("DetermineLeaveReturnDate", new object[] {
                        fBeginDate,
                        fDays,
                        leave_Type});
            return ((System.DateTime)(results[0]));
        }
        
        /// <remarks/>
        public void DetermineLeaveReturnDateAsync(System.DateTime fBeginDate, decimal fDays, string leave_Type) {
            this.DetermineLeaveReturnDateAsync(fBeginDate, fDays, leave_Type, null);
        }
        
        /// <remarks/>
        public void DetermineLeaveReturnDateAsync(System.DateTime fBeginDate, decimal fDays, string leave_Type, object userState) {
            if ((this.DetermineLeaveReturnDateOperationCompleted == null)) {
                this.DetermineLeaveReturnDateOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDetermineLeaveReturnDateOperationCompleted);
            }
            this.InvokeAsync("DetermineLeaveReturnDate", new object[] {
                        fBeginDate,
                        fDays,
                        leave_Type}, this.DetermineLeaveReturnDateOperationCompleted, userState);
        }
        
        private void OnDetermineLeaveReturnDateOperationCompleted(object arg) {
            if ((this.DetermineLeaveReturnDateCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DetermineLeaveReturnDateCompleted(this, new DetermineLeaveReturnDateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/WebPortals:GenerateLeaveStatement", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/WebPortals", ResponseElementName="GenerateLeaveStatement_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/WebPortals", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void GenerateLeaveStatement(string staffNo, string filenameFromApp) {
            this.Invoke("GenerateLeaveStatement", new object[] {
                        staffNo,
                        filenameFromApp});
        }
        
        /// <remarks/>
        public void GenerateLeaveStatementAsync(string staffNo, string filenameFromApp) {
            this.GenerateLeaveStatementAsync(staffNo, filenameFromApp, null);
        }
        
        /// <remarks/>
        public void GenerateLeaveStatementAsync(string staffNo, string filenameFromApp, object userState) {
            if ((this.GenerateLeaveStatementOperationCompleted == null)) {
                this.GenerateLeaveStatementOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGenerateLeaveStatementOperationCompleted);
            }
            this.InvokeAsync("GenerateLeaveStatement", new object[] {
                        staffNo,
                        filenameFromApp}, this.GenerateLeaveStatementOperationCompleted, userState);
        }
        
        private void OnGenerateLeaveStatementOperationCompleted(object arg) {
            if ((this.GenerateLeaveStatementCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GenerateLeaveStatementCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/WebPortals:GenerateMemoReport", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/WebPortals", ResponseElementName="GenerateMemoReport_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/WebPortals", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void GenerateMemoReport(string memoNo, string fileNameFromApp) {
            this.Invoke("GenerateMemoReport", new object[] {
                        memoNo,
                        fileNameFromApp});
        }
        
        /// <remarks/>
        public void GenerateMemoReportAsync(string memoNo, string fileNameFromApp) {
            this.GenerateMemoReportAsync(memoNo, fileNameFromApp, null);
        }
        
        /// <remarks/>
        public void GenerateMemoReportAsync(string memoNo, string fileNameFromApp, object userState) {
            if ((this.GenerateMemoReportOperationCompleted == null)) {
                this.GenerateMemoReportOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGenerateMemoReportOperationCompleted);
            }
            this.InvokeAsync("GenerateMemoReport", new object[] {
                        memoNo,
                        fileNameFromApp}, this.GenerateMemoReportOperationCompleted, userState);
        }
        
        private void OnGenerateMemoReportOperationCompleted(object arg) {
            if ((this.GenerateMemoReportCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GenerateMemoReportCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/WebPortals:GeneratePaySlipReport1", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/WebPortals", ResponseElementName="GeneratePaySlipReport1_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/WebPortals", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string GeneratePaySlipReport1(string employeeNo, [System.Xml.Serialization.XmlElementAttribute(DataType="date")] System.DateTime period, string filenameFromApp) {
            object[] results = this.Invoke("GeneratePaySlipReport1", new object[] {
                        employeeNo,
                        period,
                        filenameFromApp});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GeneratePaySlipReport1Async(string employeeNo, System.DateTime period, string filenameFromApp) {
            this.GeneratePaySlipReport1Async(employeeNo, period, filenameFromApp, null);
        }
        
        /// <remarks/>
        public void GeneratePaySlipReport1Async(string employeeNo, System.DateTime period, string filenameFromApp, object userState) {
            if ((this.GeneratePaySlipReport1OperationCompleted == null)) {
                this.GeneratePaySlipReport1OperationCompleted = new System.Threading.SendOrPostCallback(this.OnGeneratePaySlipReport1OperationCompleted);
            }
            this.InvokeAsync("GeneratePaySlipReport1", new object[] {
                        employeeNo,
                        period,
                        filenameFromApp}, this.GeneratePaySlipReport1OperationCompleted, userState);
        }
        
        private void OnGeneratePaySlipReport1OperationCompleted(object arg) {
            if ((this.GeneratePaySlipReport1Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GeneratePaySlipReport1Completed(this, new GeneratePaySlipReport1CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/WebPortals:GeneratePaySlipReport3", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/WebPortals", ResponseElementName="GeneratePaySlipReport3_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/WebPortals", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string GeneratePaySlipReport3(string employeeNo, [System.Xml.Serialization.XmlElementAttribute(DataType="date")] System.DateTime period, string filenameFromApp) {
            object[] results = this.Invoke("GeneratePaySlipReport3", new object[] {
                        employeeNo,
                        period,
                        filenameFromApp});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GeneratePaySlipReport3Async(string employeeNo, System.DateTime period, string filenameFromApp) {
            this.GeneratePaySlipReport3Async(employeeNo, period, filenameFromApp, null);
        }
        
        /// <remarks/>
        public void GeneratePaySlipReport3Async(string employeeNo, System.DateTime period, string filenameFromApp, object userState) {
            if ((this.GeneratePaySlipReport3OperationCompleted == null)) {
                this.GeneratePaySlipReport3OperationCompleted = new System.Threading.SendOrPostCallback(this.OnGeneratePaySlipReport3OperationCompleted);
            }
            this.InvokeAsync("GeneratePaySlipReport3", new object[] {
                        employeeNo,
                        period,
                        filenameFromApp}, this.GeneratePaySlipReport3OperationCompleted, userState);
        }
        
        private void OnGeneratePaySlipReport3OperationCompleted(object arg) {
            if ((this.GeneratePaySlipReport3Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GeneratePaySlipReport3Completed(this, new GeneratePaySlipReport3CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/WebPortals:GeneratePayslipReport", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/WebPortals", ResponseElementName="GeneratePayslipReport_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/WebPortals", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void GeneratePayslipReport(string employeeNo, [System.Xml.Serialization.XmlElementAttribute(DataType="date")] System.DateTime period, string fileNameFromApp) {
            this.Invoke("GeneratePayslipReport", new object[] {
                        employeeNo,
                        period,
                        fileNameFromApp});
        }
        
        /// <remarks/>
        public void GeneratePayslipReportAsync(string employeeNo, System.DateTime period, string fileNameFromApp) {
            this.GeneratePayslipReportAsync(employeeNo, period, fileNameFromApp, null);
        }
        
        /// <remarks/>
        public void GeneratePayslipReportAsync(string employeeNo, System.DateTime period, string fileNameFromApp, object userState) {
            if ((this.GeneratePayslipReportOperationCompleted == null)) {
                this.GeneratePayslipReportOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGeneratePayslipReportOperationCompleted);
            }
            this.InvokeAsync("GeneratePayslipReport", new object[] {
                        employeeNo,
                        period,
                        fileNameFromApp}, this.GeneratePayslipReportOperationCompleted, userState);
        }
        
        private void OnGeneratePayslipReportOperationCompleted(object arg) {
            if ((this.GeneratePayslipReportCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GeneratePayslipReportCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/WebPortals:GenerateTenderAwardLetter", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/WebPortals", ResponseElementName="GenerateTenderAwardLetter_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/WebPortals", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void GenerateTenderAwardLetter(string tenderNo, string bidNo, string filenameFromApp) {
            this.Invoke("GenerateTenderAwardLetter", new object[] {
                        tenderNo,
                        bidNo,
                        filenameFromApp});
        }
        
        /// <remarks/>
        public void GenerateTenderAwardLetterAsync(string tenderNo, string bidNo, string filenameFromApp) {
            this.GenerateTenderAwardLetterAsync(tenderNo, bidNo, filenameFromApp, null);
        }
        
        /// <remarks/>
        public void GenerateTenderAwardLetterAsync(string tenderNo, string bidNo, string filenameFromApp, object userState) {
            if ((this.GenerateTenderAwardLetterOperationCompleted == null)) {
                this.GenerateTenderAwardLetterOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGenerateTenderAwardLetterOperationCompleted);
            }
            this.InvokeAsync("GenerateTenderAwardLetter", new object[] {
                        tenderNo,
                        bidNo,
                        filenameFromApp}, this.GenerateTenderAwardLetterOperationCompleted, userState);
        }
        
        private void OnGenerateTenderAwardLetterOperationCompleted(object arg) {
            if ((this.GenerateTenderAwardLetterCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GenerateTenderAwardLetterCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/WebPortals:Generatep9Report", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/WebPortals", ResponseElementName="Generatep9Report_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/WebPortals", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string Generatep9Report(int selectedPeriod, string employeeNo, string filenameFromApp) {
            object[] results = this.Invoke("Generatep9Report", new object[] {
                        selectedPeriod,
                        employeeNo,
                        filenameFromApp});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void Generatep9ReportAsync(int selectedPeriod, string employeeNo, string filenameFromApp) {
            this.Generatep9ReportAsync(selectedPeriod, employeeNo, filenameFromApp, null);
        }
        
        /// <remarks/>
        public void Generatep9ReportAsync(int selectedPeriod, string employeeNo, string filenameFromApp, object userState) {
            if ((this.Generatep9ReportOperationCompleted == null)) {
                this.Generatep9ReportOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGeneratep9ReportOperationCompleted);
            }
            this.InvokeAsync("Generatep9Report", new object[] {
                        selectedPeriod,
                        employeeNo,
                        filenameFromApp}, this.Generatep9ReportOperationCompleted, userState);
        }
        
        private void OnGeneratep9ReportOperationCompleted(object arg) {
            if ((this.Generatep9ReportCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Generatep9ReportCompleted(this, new Generatep9ReportCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/WebPortals:GetAdvertisedJobs", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/WebPortals", ResponseElementName="GetAdvertisedJobs_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/WebPortals", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string GetAdvertisedJobs() {
            object[] results = this.Invoke("GetAdvertisedJobs", new object[0]);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetAdvertisedJobsAsync() {
            this.GetAdvertisedJobsAsync(null);
        }
        
        /// <remarks/>
        public void GetAdvertisedJobsAsync(object userState) {
            if ((this.GetAdvertisedJobsOperationCompleted == null)) {
                this.GetAdvertisedJobsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAdvertisedJobsOperationCompleted);
            }
            this.InvokeAsync("GetAdvertisedJobs", new object[0], this.GetAdvertisedJobsOperationCompleted, userState);
        }
        
        private void OnGetAdvertisedJobsOperationCompleted(object arg) {
            if ((this.GetAdvertisedJobsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAdvertisedJobsCompleted(this, new GetAdvertisedJobsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/WebPortals:GetApprovalStatus", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/WebPortals", ResponseElementName="GetApprovalStatus_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/WebPortals", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string GetApprovalStatus(string documentNo) {
            object[] results = this.Invoke("GetApprovalStatus", new object[] {
                        documentNo});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetApprovalStatusAsync(string documentNo) {
            this.GetApprovalStatusAsync(documentNo, null);
        }
        
        /// <remarks/>
        public void GetApprovalStatusAsync(string documentNo, object userState) {
            if ((this.GetApprovalStatusOperationCompleted == null)) {
                this.GetApprovalStatusOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetApprovalStatusOperationCompleted);
            }
            this.InvokeAsync("GetApprovalStatus", new object[] {
                        documentNo}, this.GetApprovalStatusOperationCompleted, userState);
        }
        
        private void OnGetApprovalStatusOperationCompleted(object arg) {
            if ((this.GetApprovalStatusCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetApprovalStatusCompleted(this, new GetApprovalStatusCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/WebPortals:GetBidderCurrentPassword", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/WebPortals", ResponseElementName="GetBidderCurrentPassword_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/WebPortals", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string GetBidderCurrentPassword(string bidderNumber) {
            object[] results = this.Invoke("GetBidderCurrentPassword", new object[] {
                        bidderNumber});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetBidderCurrentPasswordAsync(string bidderNumber) {
            this.GetBidderCurrentPasswordAsync(bidderNumber, null);
        }
        
        /// <remarks/>
        public void GetBidderCurrentPasswordAsync(string bidderNumber, object userState) {
            if ((this.GetBidderCurrentPasswordOperationCompleted == null)) {
                this.GetBidderCurrentPasswordOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetBidderCurrentPasswordOperationCompleted);
            }
            this.InvokeAsync("GetBidderCurrentPassword", new object[] {
                        bidderNumber}, this.GetBidderCurrentPasswordOperationCompleted, userState);
        }
        
        private void OnGetBidderCurrentPasswordOperationCompleted(object arg) {
            if ((this.GetBidderCurrentPasswordCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetBidderCurrentPasswordCompleted(this, new GetBidderCurrentPasswordCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/WebPortals:GetBidderMail", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/WebPortals", ResponseElementName="GetBidderMail_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/WebPortals", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string GetBidderMail(string bidderNumber) {
            object[] results = this.Invoke("GetBidderMail", new object[] {
                        bidderNumber});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetBidderMailAsync(string bidderNumber) {
            this.GetBidderMailAsync(bidderNumber, null);
        }
        
        /// <remarks/>
        public void GetBidderMailAsync(string bidderNumber, object userState) {
            if ((this.GetBidderMailOperationCompleted == null)) {
                this.GetBidderMailOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetBidderMailOperationCompleted);
            }
            this.InvokeAsync("GetBidderMail", new object[] {
                        bidderNumber}, this.GetBidderMailOperationCompleted, userState);
        }
        
        private void OnGetBidderMailOperationCompleted(object arg) {
            if ((this.GetBidderMailCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetBidderMailCompleted(this, new GetBidderMailCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/WebPortals:GetBidderProfileDetails", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/WebPortals", ResponseElementName="GetBidderProfileDetails_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/WebPortals", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string GetBidderProfileDetails(string username) {
            object[] results = this.Invoke("GetBidderProfileDetails", new object[] {
                        username});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetBidderProfileDetailsAsync(string username) {
            this.GetBidderProfileDetailsAsync(username, null);
        }
        
        /// <remarks/>
        public void GetBidderProfileDetailsAsync(string username, object userState) {
            if ((this.GetBidderProfileDetailsOperationCompleted == null)) {
                this.GetBidderProfileDetailsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetBidderProfileDetailsOperationCompleted);
            }
            this.InvokeAsync("GetBidderProfileDetails", new object[] {
                        username}, this.GetBidderProfileDetailsOperationCompleted, userState);
        }
        
        private void OnGetBidderProfileDetailsOperationCompleted(object arg) {
            if ((this.GetBidderProfileDetailsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetBidderProfileDetailsCompleted(this, new GetBidderProfileDetailsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/WebPortals:GetCurrentPassword", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/WebPortals", ResponseElementName="GetCurrentPassword_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/WebPortals", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string GetCurrentPassword(string username) {
            object[] results = this.Invoke("GetCurrentPassword", new object[] {
                        username});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetCurrentPasswordAsync(string username) {
            this.GetCurrentPasswordAsync(username, null);
        }
        
        /// <remarks/>
        public void GetCurrentPasswordAsync(string username, object userState) {
            if ((this.GetCurrentPasswordOperationCompleted == null)) {
                this.GetCurrentPasswordOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetCurrentPasswordOperationCompleted);
            }
            this.InvokeAsync("GetCurrentPassword", new object[] {
                        username}, this.GetCurrentPasswordOperationCompleted, userState);
        }
        
        private void OnGetCurrentPasswordOperationCompleted(object arg) {
            if ((this.GetCurrentPasswordCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetCurrentPasswordCompleted(this, new GetCurrentPasswordCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/WebPortals:GetCurrentRecruitmentPassword", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/WebPortals", ResponseElementName="GetCurrentRecruitmentPassword_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/WebPortals", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string GetCurrentRecruitmentPassword(string username) {
            object[] results = this.Invoke("GetCurrentRecruitmentPassword", new object[] {
                        username});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetCurrentRecruitmentPasswordAsync(string username) {
            this.GetCurrentRecruitmentPasswordAsync(username, null);
        }
        
        /// <remarks/>
        public void GetCurrentRecruitmentPasswordAsync(string username, object userState) {
            if ((this.GetCurrentRecruitmentPasswordOperationCompleted == null)) {
                this.GetCurrentRecruitmentPasswordOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetCurrentRecruitmentPasswordOperationCompleted);
            }
            this.InvokeAsync("GetCurrentRecruitmentPassword", new object[] {
                        username}, this.GetCurrentRecruitmentPasswordOperationCompleted, userState);
        }
        
        private void OnGetCurrentRecruitmentPasswordOperationCompleted(object arg) {
            if ((this.GetCurrentRecruitmentPasswordCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetCurrentRecruitmentPasswordCompleted(this, new GetCurrentRecruitmentPasswordCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/WebPortals:GetLastPRNNo", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/WebPortals", ResponseElementName="GetLastPRNNo_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/WebPortals", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string GetLastPRNNo(string username) {
            object[] results = this.Invoke("GetLastPRNNo", new object[] {
                        username});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetLastPRNNoAsync(string username) {
            this.GetLastPRNNoAsync(username, null);
        }
        
        /// <remarks/>
        public void GetLastPRNNoAsync(string username, object userState) {
            if ((this.GetLastPRNNoOperationCompleted == null)) {
                this.GetLastPRNNoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetLastPRNNoOperationCompleted);
            }
            this.InvokeAsync("GetLastPRNNo", new object[] {
                        username}, this.GetLastPRNNoOperationCompleted, userState);
        }
        
        private void OnGetLastPRNNoOperationCompleted(object arg) {
            if ((this.GetLastPRNNoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetLastPRNNoCompleted(this, new GetLastPRNNoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/WebPortals:GetLeaveDetails", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/WebPortals", ResponseElementName="GetLeaveDetails_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/WebPortals", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string GetLeaveDetails(string leaveNo) {
            object[] results = this.Invoke("GetLeaveDetails", new object[] {
                        leaveNo});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetLeaveDetailsAsync(string leaveNo) {
            this.GetLeaveDetailsAsync(leaveNo, null);
        }
        
        /// <remarks/>
        public void GetLeaveDetailsAsync(string leaveNo, object userState) {
            if ((this.GetLeaveDetailsOperationCompleted == null)) {
                this.GetLeaveDetailsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetLeaveDetailsOperationCompleted);
            }
            this.InvokeAsync("GetLeaveDetails", new object[] {
                        leaveNo}, this.GetLeaveDetailsOperationCompleted, userState);
        }
        
        private void OnGetLeaveDetailsOperationCompleted(object arg) {
            if ((this.GetLeaveDetailsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetLeaveDetailsCompleted(this, new GetLeaveDetailsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/WebPortals:GetMonthName", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/WebPortals", ResponseElementName="GetMonthName_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/WebPortals", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string GetMonthName(int monthNumber) {
            object[] results = this.Invoke("GetMonthName", new object[] {
                        monthNumber});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetMonthNameAsync(int monthNumber) {
            this.GetMonthNameAsync(monthNumber, null);
        }
        
        /// <remarks/>
        public void GetMonthNameAsync(int monthNumber, object userState) {
            if ((this.GetMonthNameOperationCompleted == null)) {
                this.GetMonthNameOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetMonthNameOperationCompleted);
            }
            this.InvokeAsync("GetMonthName", new object[] {
                        monthNumber}, this.GetMonthNameOperationCompleted, userState);
        }
        
        private void OnGetMonthNameOperationCompleted(object arg) {
            if ((this.GetMonthNameCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetMonthNameCompleted(this, new GetMonthNameCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/WebPortals:GetMyStoreRequisitions", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/WebPortals", ResponseElementName="GetMyStoreRequisitions_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/WebPortals", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string GetMyStoreRequisitions(string username) {
            object[] results = this.Invoke("GetMyStoreRequisitions", new object[] {
                        username});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetMyStoreRequisitionsAsync(string username) {
            this.GetMyStoreRequisitionsAsync(username, null);
        }
        
        /// <remarks/>
        public void GetMyStoreRequisitionsAsync(string username, object userState) {
            if ((this.GetMyStoreRequisitionsOperationCompleted == null)) {
                this.GetMyStoreRequisitionsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetMyStoreRequisitionsOperationCompleted);
            }
            this.InvokeAsync("GetMyStoreRequisitions", new object[] {
                        username}, this.GetMyStoreRequisitionsOperationCompleted, userState);
        }
        
        private void OnGetMyStoreRequisitionsOperationCompleted(object arg) {
            if ((this.GetMyStoreRequisitionsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetMyStoreRequisitionsCompleted(this, new GetMyStoreRequisitionsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/WebPortals:GetPRLEmployeeTransactions", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/WebPortals", ResponseElementName="GetPRLEmployeeTransactions_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/WebPortals", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string GetPRLEmployeeTransactions(string employeeCode, int year, int month) {
            object[] results = this.Invoke("GetPRLEmployeeTransactions", new object[] {
                        employeeCode,
                        year,
                        month});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetPRLEmployeeTransactionsAsync(string employeeCode, int year, int month) {
            this.GetPRLEmployeeTransactionsAsync(employeeCode, year, month, null);
        }
        
        /// <remarks/>
        public void GetPRLEmployeeTransactionsAsync(string employeeCode, int year, int month, object userState) {
            if ((this.GetPRLEmployeeTransactionsOperationCompleted == null)) {
                this.GetPRLEmployeeTransactionsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetPRLEmployeeTransactionsOperationCompleted);
            }
            this.InvokeAsync("GetPRLEmployeeTransactions", new object[] {
                        employeeCode,
                        year,
                        month}, this.GetPRLEmployeeTransactionsOperationCompleted, userState);
        }
        
        private void OnGetPRLEmployeeTransactionsOperationCompleted(object arg) {
            if ((this.GetPRLEmployeeTransactionsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetPRLEmployeeTransactionsCompleted(this, new GetPRLEmployeeTransactionsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/WebPortals:GetPRNHeaderDetails", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/WebPortals", ResponseElementName="GetPRNHeaderDetails_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/WebPortals", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string GetPRNHeaderDetails(string purchaseNo) {
            object[] results = this.Invoke("GetPRNHeaderDetails", new object[] {
                        purchaseNo});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetPRNHeaderDetailsAsync(string purchaseNo) {
            this.GetPRNHeaderDetailsAsync(purchaseNo, null);
        }
        
        /// <remarks/>
        public void GetPRNHeaderDetailsAsync(string purchaseNo, object userState) {
            if ((this.GetPRNHeaderDetailsOperationCompleted == null)) {
                this.GetPRNHeaderDetailsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetPRNHeaderDetailsOperationCompleted);
            }
            this.InvokeAsync("GetPRNHeaderDetails", new object[] {
                        purchaseNo}, this.GetPRNHeaderDetailsOperationCompleted, userState);
        }
        
        private void OnGetPRNHeaderDetailsOperationCompleted(object arg) {
            if ((this.GetPRNHeaderDetailsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetPRNHeaderDetailsCompleted(this, new GetPRNHeaderDetailsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/WebPortals:GetPayslipMonths", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/WebPortals", ResponseElementName="GetPayslipMonths_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/WebPortals", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string GetPayslipMonths(int currentYear) {
            object[] results = this.Invoke("GetPayslipMonths", new object[] {
                        currentYear});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetPayslipMonthsAsync(int currentYear) {
            this.GetPayslipMonthsAsync(currentYear, null);
        }
        
        /// <remarks/>
        public void GetPayslipMonthsAsync(int currentYear, object userState) {
            if ((this.GetPayslipMonthsOperationCompleted == null)) {
                this.GetPayslipMonthsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetPayslipMonthsOperationCompleted);
            }
            this.InvokeAsync("GetPayslipMonths", new object[] {
                        currentYear}, this.GetPayslipMonthsOperationCompleted, userState);
        }
        
        private void OnGetPayslipMonthsOperationCompleted(object arg) {
            if ((this.GetPayslipMonthsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetPayslipMonthsCompleted(this, new GetPayslipMonthsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/WebPortals:GetPayslipYears", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/WebPortals", ResponseElementName="GetPayslipYears_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/WebPortals", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string GetPayslipYears() {
            object[] results = this.Invoke("GetPayslipYears", new object[0]);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetPayslipYearsAsync() {
            this.GetPayslipYearsAsync(null);
        }
        
        /// <remarks/>
        public void GetPayslipYearsAsync(object userState) {
            if ((this.GetPayslipYearsOperationCompleted == null)) {
                this.GetPayslipYearsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetPayslipYearsOperationCompleted);
            }
            this.InvokeAsync("GetPayslipYears", new object[0], this.GetPayslipYearsOperationCompleted, userState);
        }
        
        private void OnGetPayslipYearsOperationCompleted(object arg) {
            if ((this.GetPayslipYearsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetPayslipYearsCompleted(this, new GetPayslipYearsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/WebPortals:GetProfilePicture", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/WebPortals", ResponseElementName="GetProfilePicture_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/WebPortals", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string GetProfilePicture(string staffNo) {
            object[] results = this.Invoke("GetProfilePicture", new object[] {
                        staffNo});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetProfilePictureAsync(string staffNo) {
            this.GetProfilePictureAsync(staffNo, null);
        }
        
        /// <remarks/>
        public void GetProfilePictureAsync(string staffNo, object userState) {
            if ((this.GetProfilePictureOperationCompleted == null)) {
                this.GetProfilePictureOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetProfilePictureOperationCompleted);
            }
            this.InvokeAsync("GetProfilePicture", new object[] {
                        staffNo}, this.GetProfilePictureOperationCompleted, userState);
        }
        
        private void OnGetProfilePictureOperationCompleted(object arg) {
            if ((this.GetProfilePictureCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetProfilePictureCompleted(this, new GetProfilePictureCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/WebPortals:GetRecruitmentEmailAddress", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/WebPortals", ResponseElementName="GetRecruitmentEmailAddress_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/WebPortals", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string GetRecruitmentEmailAddress(string username) {
            object[] results = this.Invoke("GetRecruitmentEmailAddress", new object[] {
                        username});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetRecruitmentEmailAddressAsync(string username) {
            this.GetRecruitmentEmailAddressAsync(username, null);
        }
        
        /// <remarks/>
        public void GetRecruitmentEmailAddressAsync(string username, object userState) {
            if ((this.GetRecruitmentEmailAddressOperationCompleted == null)) {
                this.GetRecruitmentEmailAddressOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetRecruitmentEmailAddressOperationCompleted);
            }
            this.InvokeAsync("GetRecruitmentEmailAddress", new object[] {
                        username}, this.GetRecruitmentEmailAddressOperationCompleted, userState);
        }
        
        private void OnGetRecruitmentEmailAddressOperationCompleted(object arg) {
            if ((this.GetRecruitmentEmailAddressCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetRecruitmentEmailAddressCompleted(this, new GetRecruitmentEmailAddressCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/WebPortals:GetStaffDetails", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/WebPortals", ResponseElementName="GetStaffDetails_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/WebPortals", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string GetStaffDetails(string username) {
            object[] results = this.Invoke("GetStaffDetails", new object[] {
                        username});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetStaffDetailsAsync(string username) {
            this.GetStaffDetailsAsync(username, null);
        }
        
        /// <remarks/>
        public void GetStaffDetailsAsync(string username, object userState) {
            if ((this.GetStaffDetailsOperationCompleted == null)) {
                this.GetStaffDetailsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetStaffDetailsOperationCompleted);
            }
            this.InvokeAsync("GetStaffDetails", new object[] {
                        username}, this.GetStaffDetailsOperationCompleted, userState);
        }
        
        private void OnGetStaffDetailsOperationCompleted(object arg) {
            if ((this.GetStaffDetailsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetStaffDetailsCompleted(this, new GetStaffDetailsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/WebPortals:GetStaffGender", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/WebPortals", ResponseElementName="GetStaffGender_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/WebPortals", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string GetStaffGender(string username) {
            object[] results = this.Invoke("GetStaffGender", new object[] {
                        username});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetStaffGenderAsync(string username) {
            this.GetStaffGenderAsync(username, null);
        }
        
        /// <remarks/>
        public void GetStaffGenderAsync(string username, object userState) {
            if ((this.GetStaffGenderOperationCompleted == null)) {
                this.GetStaffGenderOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetStaffGenderOperationCompleted);
            }
            this.InvokeAsync("GetStaffGender", new object[] {
                        username}, this.GetStaffGenderOperationCompleted, userState);
        }
        
        private void OnGetStaffGenderOperationCompleted(object arg) {
            if ((this.GetStaffGenderCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetStaffGenderCompleted(this, new GetStaffGenderCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/WebPortals:GetStaffMail", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/WebPortals", ResponseElementName="GetStaffMail_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/WebPortals", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string GetStaffMail(string username) {
            object[] results = this.Invoke("GetStaffMail", new object[] {
                        username});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetStaffMailAsync(string username) {
            this.GetStaffMailAsync(username, null);
        }
        
        /// <remarks/>
        public void GetStaffMailAsync(string username, object userState) {
            if ((this.GetStaffMailOperationCompleted == null)) {
                this.GetStaffMailOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetStaffMailOperationCompleted);
            }
            this.InvokeAsync("GetStaffMail", new object[] {
                        username}, this.GetStaffMailOperationCompleted, userState);
        }
        
        private void OnGetStaffMailOperationCompleted(object arg) {
            if ((this.GetStaffMailCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetStaffMailCompleted(this, new GetStaffMailCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/WebPortals:GetStaffProfileDetails", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/WebPortals", ResponseElementName="GetStaffProfileDetails_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/WebPortals", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string GetStaffProfileDetails(string username) {
            object[] results = this.Invoke("GetStaffProfileDetails", new object[] {
                        username});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetStaffProfileDetailsAsync(string username) {
            this.GetStaffProfileDetailsAsync(username, null);
        }
        
        /// <remarks/>
        public void GetStaffProfileDetailsAsync(string username, object userState) {
            if ((this.GetStaffProfileDetailsOperationCompleted == null)) {
                this.GetStaffProfileDetailsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetStaffProfileDetailsOperationCompleted);
            }
            this.InvokeAsync("GetStaffProfileDetails", new object[] {
                        username}, this.GetStaffProfileDetailsOperationCompleted, userState);
        }
        
        private void OnGetStaffProfileDetailsOperationCompleted(object arg) {
            if ((this.GetStaffProfileDetailsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetStaffProfileDetailsCompleted(this, new GetStaffProfileDetailsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/WebPortals:GetVendorProfileDetails", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/WebPortals", ResponseElementName="GetVendorProfileDetails_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/WebPortals", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string GetVendorProfileDetails(string bidderNumber) {
            object[] results = this.Invoke("GetVendorProfileDetails", new object[] {
                        bidderNumber});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetVendorProfileDetailsAsync(string bidderNumber) {
            this.GetVendorProfileDetailsAsync(bidderNumber, null);
        }
        
        /// <remarks/>
        public void GetVendorProfileDetailsAsync(string bidderNumber, object userState) {
            if ((this.GetVendorProfileDetailsOperationCompleted == null)) {
                this.GetVendorProfileDetailsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetVendorProfileDetailsOperationCompleted);
            }
            this.InvokeAsync("GetVendorProfileDetails", new object[] {
                        bidderNumber}, this.GetVendorProfileDetailsOperationCompleted, userState);
        }
        
        private void OnGetVendorProfileDetailsOperationCompleted(object arg) {
            if ((this.GetVendorProfileDetailsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetVendorProfileDetailsCompleted(this, new GetVendorProfileDetailsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/WebPortals:HRCancelLeaveApplication", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/WebPortals", ResponseElementName="HRCancelLeaveApplication_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/WebPortals", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void HRCancelLeaveApplication(string leaveApplicationNo) {
            this.Invoke("HRCancelLeaveApplication", new object[] {
                        leaveApplicationNo});
        }
        
        /// <remarks/>
        public void HRCancelLeaveApplicationAsync(string leaveApplicationNo) {
            this.HRCancelLeaveApplicationAsync(leaveApplicationNo, null);
        }
        
        /// <remarks/>
        public void HRCancelLeaveApplicationAsync(string leaveApplicationNo, object userState) {
            if ((this.HRCancelLeaveApplicationOperationCompleted == null)) {
                this.HRCancelLeaveApplicationOperationCompleted = new System.Threading.SendOrPostCallback(this.OnHRCancelLeaveApplicationOperationCompleted);
            }
            this.InvokeAsync("HRCancelLeaveApplication", new object[] {
                        leaveApplicationNo}, this.HRCancelLeaveApplicationOperationCompleted, userState);
        }
        
        private void OnHRCancelLeaveApplicationOperationCompleted(object arg) {
            if ((this.HRCancelLeaveApplicationCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.HRCancelLeaveApplicationCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/WebPortals:HRLeaveApplication", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/WebPortals", ResponseElementName="HRLeaveApplication_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/WebPortals", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string HRLeaveApplication(string leaveNo, string employeeNo, string leaveType, decimal appliedDays, [System.Xml.Serialization.XmlElementAttribute(DataType="date")] System.DateTime startDate, [System.Xml.Serialization.XmlElementAttribute(DataType="date")] System.DateTime endDate, [System.Xml.Serialization.XmlElementAttribute(DataType="date")] System.DateTime returnDate, string senderComments, string reliever, string relieverName, string rCentre, string reliever2, string relieverName2, string reliever3, string relieverName3) {
            object[] results = this.Invoke("HRLeaveApplication", new object[] {
                        leaveNo,
                        employeeNo,
                        leaveType,
                        appliedDays,
                        startDate,
                        endDate,
                        returnDate,
                        senderComments,
                        reliever,
                        relieverName,
                        rCentre,
                        reliever2,
                        relieverName2,
                        reliever3,
                        relieverName3});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void HRLeaveApplicationAsync(string leaveNo, string employeeNo, string leaveType, decimal appliedDays, System.DateTime startDate, System.DateTime endDate, System.DateTime returnDate, string senderComments, string reliever, string relieverName, string rCentre, string reliever2, string relieverName2, string reliever3, string relieverName3) {
            this.HRLeaveApplicationAsync(leaveNo, employeeNo, leaveType, appliedDays, startDate, endDate, returnDate, senderComments, reliever, relieverName, rCentre, reliever2, relieverName2, reliever3, relieverName3, null);
        }
        
        /// <remarks/>
        public void HRLeaveApplicationAsync(
                    string leaveNo, 
                    string employeeNo, 
                    string leaveType, 
                    decimal appliedDays, 
                    System.DateTime startDate, 
                    System.DateTime endDate, 
                    System.DateTime returnDate, 
                    string senderComments, 
                    string reliever, 
                    string relieverName, 
                    string rCentre, 
                    string reliever2, 
                    string relieverName2, 
                    string reliever3, 
                    string relieverName3, 
                    object userState) {
            if ((this.HRLeaveApplicationOperationCompleted == null)) {
                this.HRLeaveApplicationOperationCompleted = new System.Threading.SendOrPostCallback(this.OnHRLeaveApplicationOperationCompleted);
            }
            this.InvokeAsync("HRLeaveApplication", new object[] {
                        leaveNo,
                        employeeNo,
                        leaveType,
                        appliedDays,
                        startDate,
                        endDate,
                        returnDate,
                        senderComments,
                        reliever,
                        relieverName,
                        rCentre,
                        reliever2,
                        relieverName2,
                        reliever3,
                        relieverName3}, this.HRLeaveApplicationOperationCompleted, userState);
        }
        
        private void OnHRLeaveApplicationOperationCompleted(object arg) {
            if ((this.HRLeaveApplicationCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.HRLeaveApplicationCompleted(this, new HRLeaveApplicationCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/WebPortals:ImprestRequisitionApprovalRequ" +
            "est", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/WebPortals", ResponseElementName="ImprestRequisitionApprovalRequest_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/WebPortals", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void ImprestRequisitionApprovalRequest(string reqNo) {
            this.Invoke("ImprestRequisitionApprovalRequest", new object[] {
                        reqNo});
        }
        
        /// <remarks/>
        public void ImprestRequisitionApprovalRequestAsync(string reqNo) {
            this.ImprestRequisitionApprovalRequestAsync(reqNo, null);
        }
        
        /// <remarks/>
        public void ImprestRequisitionApprovalRequestAsync(string reqNo, object userState) {
            if ((this.ImprestRequisitionApprovalRequestOperationCompleted == null)) {
                this.ImprestRequisitionApprovalRequestOperationCompleted = new System.Threading.SendOrPostCallback(this.OnImprestRequisitionApprovalRequestOperationCompleted);
            }
            this.InvokeAsync("ImprestRequisitionApprovalRequest", new object[] {
                        reqNo}, this.ImprestRequisitionApprovalRequestOperationCompleted, userState);
        }
        
        private void OnImprestRequisitionApprovalRequestOperationCompleted(object arg) {
            if ((this.ImprestRequisitionApprovalRequestCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ImprestRequisitionApprovalRequestCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/WebPortals:ImprestRequisitionCreate", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/WebPortals", ResponseElementName="ImprestRequisitionCreate_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/WebPortals", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string ImprestRequisitionCreate(string user, string campusz, string departmentz, string campusName, string deptName, string rCentre, string accType, string username, string reason) {
            object[] results = this.Invoke("ImprestRequisitionCreate", new object[] {
                        user,
                        campusz,
                        departmentz,
                        campusName,
                        deptName,
                        rCentre,
                        accType,
                        username,
                        reason});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void ImprestRequisitionCreateAsync(string user, string campusz, string departmentz, string campusName, string deptName, string rCentre, string accType, string username, string reason) {
            this.ImprestRequisitionCreateAsync(user, campusz, departmentz, campusName, deptName, rCentre, accType, username, reason, null);
        }
        
        /// <remarks/>
        public void ImprestRequisitionCreateAsync(string user, string campusz, string departmentz, string campusName, string deptName, string rCentre, string accType, string username, string reason, object userState) {
            if ((this.ImprestRequisitionCreateOperationCompleted == null)) {
                this.ImprestRequisitionCreateOperationCompleted = new System.Threading.SendOrPostCallback(this.OnImprestRequisitionCreateOperationCompleted);
            }
            this.InvokeAsync("ImprestRequisitionCreate", new object[] {
                        user,
                        campusz,
                        departmentz,
                        campusName,
                        deptName,
                        rCentre,
                        accType,
                        username,
                        reason}, this.ImprestRequisitionCreateOperationCompleted, userState);
        }
        
        private void OnImprestRequisitionCreateOperationCompleted(object arg) {
            if ((this.ImprestRequisitionCreateCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ImprestRequisitionCreateCompleted(this, new ImprestRequisitionCreateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/WebPortals:InsertApproverComments", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/WebPortals", ResponseElementName="InsertApproverComments_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/WebPortals", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void InsertApproverComments(string documentNo, string approverID, string comments) {
            this.Invoke("InsertApproverComments", new object[] {
                        documentNo,
                        approverID,
                        comments});
        }
        
        /// <remarks/>
        public void InsertApproverCommentsAsync(string documentNo, string approverID, string comments) {
            this.InsertApproverCommentsAsync(documentNo, approverID, comments, null);
        }
        
        /// <remarks/>
        public void InsertApproverCommentsAsync(string documentNo, string approverID, string comments, object userState) {
            if ((this.InsertApproverCommentsOperationCompleted == null)) {
                this.InsertApproverCommentsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnInsertApproverCommentsOperationCompleted);
            }
            this.InvokeAsync("InsertApproverComments", new object[] {
                        documentNo,
                        approverID,
                        comments}, this.InsertApproverCommentsOperationCompleted, userState);
        }
        
        private void OnInsertApproverCommentsOperationCompleted(object arg) {
            if ((this.InsertApproverCommentsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.InsertApproverCommentsCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/WebPortals:InsertClaimRequisitionLines", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/WebPortals", ResponseElementName="InsertClaimRequisitionLines_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/WebPortals", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string InsertClaimRequisitionLines(string reqNo, string atypes, string accNo, string accName, decimal amount, string userId) {
            object[] results = this.Invoke("InsertClaimRequisitionLines", new object[] {
                        reqNo,
                        atypes,
                        accNo,
                        accName,
                        amount,
                        userId});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void InsertClaimRequisitionLinesAsync(string reqNo, string atypes, string accNo, string accName, decimal amount, string userId) {
            this.InsertClaimRequisitionLinesAsync(reqNo, atypes, accNo, accName, amount, userId, null);
        }
        
        /// <remarks/>
        public void InsertClaimRequisitionLinesAsync(string reqNo, string atypes, string accNo, string accName, decimal amount, string userId, object userState) {
            if ((this.InsertClaimRequisitionLinesOperationCompleted == null)) {
                this.InsertClaimRequisitionLinesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnInsertClaimRequisitionLinesOperationCompleted);
            }
            this.InvokeAsync("InsertClaimRequisitionLines", new object[] {
                        reqNo,
                        atypes,
                        accNo,
                        accName,
                        amount,
                        userId}, this.InsertClaimRequisitionLinesOperationCompleted, userState);
        }
        
        private void OnInsertClaimRequisitionLinesOperationCompleted(object arg) {
            if ((this.InsertClaimRequisitionLinesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.InsertClaimRequisitionLinesCompleted(this, new InsertClaimRequisitionLinesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/WebPortals:InsertImprestRequisitionLines", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/WebPortals", ResponseElementName="InsertImprestRequisitionLines_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/WebPortals", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string InsertImprestRequisitionLines(string reqNo, string atypes, string accNo, string accName, decimal amount, string userId) {
            object[] results = this.Invoke("InsertImprestRequisitionLines", new object[] {
                        reqNo,
                        atypes,
                        accNo,
                        accName,
                        amount,
                        userId});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void InsertImprestRequisitionLinesAsync(string reqNo, string atypes, string accNo, string accName, decimal amount, string userId) {
            this.InsertImprestRequisitionLinesAsync(reqNo, atypes, accNo, accName, amount, userId, null);
        }
        
        /// <remarks/>
        public void InsertImprestRequisitionLinesAsync(string reqNo, string atypes, string accNo, string accName, decimal amount, string userId, object userState) {
            if ((this.InsertImprestRequisitionLinesOperationCompleted == null)) {
                this.InsertImprestRequisitionLinesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnInsertImprestRequisitionLinesOperationCompleted);
            }
            this.InvokeAsync("InsertImprestRequisitionLines", new object[] {
                        reqNo,
                        atypes,
                        accNo,
                        accName,
                        amount,
                        userId}, this.InsertImprestRequisitionLinesOperationCompleted, userState);
        }
        
        private void OnInsertImprestRequisitionLinesOperationCompleted(object arg) {
            if ((this.InsertImprestRequisitionLinesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.InsertImprestRequisitionLinesCompleted(this, new InsertImprestRequisitionLinesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/WebPortals:InsertJobApplicantQualificatio" +
            "ns", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/WebPortals", ResponseElementName="InsertJobApplicantQualifications_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/WebPortals", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string InsertJobApplicantQualifications(string appNo, string qualType, string qualCode, string institution, [System.Xml.Serialization.XmlElementAttribute(DataType="date")] System.DateTime fromDate, [System.Xml.Serialization.XmlElementAttribute(DataType="date")] System.DateTime toDate) {
            object[] results = this.Invoke("InsertJobApplicantQualifications", new object[] {
                        appNo,
                        qualType,
                        qualCode,
                        institution,
                        fromDate,
                        toDate});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void InsertJobApplicantQualificationsAsync(string appNo, string qualType, string qualCode, string institution, System.DateTime fromDate, System.DateTime toDate) {
            this.InsertJobApplicantQualificationsAsync(appNo, qualType, qualCode, institution, fromDate, toDate, null);
        }
        
        /// <remarks/>
        public void InsertJobApplicantQualificationsAsync(string appNo, string qualType, string qualCode, string institution, System.DateTime fromDate, System.DateTime toDate, object userState) {
            if ((this.InsertJobApplicantQualificationsOperationCompleted == null)) {
                this.InsertJobApplicantQualificationsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnInsertJobApplicantQualificationsOperationCompleted);
            }
            this.InvokeAsync("InsertJobApplicantQualifications", new object[] {
                        appNo,
                        qualType,
                        qualCode,
                        institution,
                        fromDate,
                        toDate}, this.InsertJobApplicantQualificationsOperationCompleted, userState);
        }
        
        private void OnInsertJobApplicantQualificationsOperationCompleted(object arg) {
            if ((this.InsertJobApplicantQualificationsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.InsertJobApplicantQualificationsCompleted(this, new InsertJobApplicantQualificationsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/WebPortals:InsertQuotedAmount", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/WebPortals", ResponseElementName="InsertQuotedAmount_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/WebPortals", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string InsertQuotedAmount(string bidderNo, string tenderNo, string bidNo, string lineCode, string desciption, decimal quotedValue) {
            object[] results = this.Invoke("InsertQuotedAmount", new object[] {
                        bidderNo,
                        tenderNo,
                        bidNo,
                        lineCode,
                        desciption,
                        quotedValue});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void InsertQuotedAmountAsync(string bidderNo, string tenderNo, string bidNo, string lineCode, string desciption, decimal quotedValue) {
            this.InsertQuotedAmountAsync(bidderNo, tenderNo, bidNo, lineCode, desciption, quotedValue, null);
        }
        
        /// <remarks/>
        public void InsertQuotedAmountAsync(string bidderNo, string tenderNo, string bidNo, string lineCode, string desciption, decimal quotedValue, object userState) {
            if ((this.InsertQuotedAmountOperationCompleted == null)) {
                this.InsertQuotedAmountOperationCompleted = new System.Threading.SendOrPostCallback(this.OnInsertQuotedAmountOperationCompleted);
            }
            this.InvokeAsync("InsertQuotedAmount", new object[] {
                        bidderNo,
                        tenderNo,
                        bidNo,
                        lineCode,
                        desciption,
                        quotedValue}, this.InsertQuotedAmountOperationCompleted, userState);
        }
        
        private void OnInsertQuotedAmountOperationCompleted(object arg) {
            if ((this.InsertQuotedAmountCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.InsertQuotedAmountCompleted(this, new InsertQuotedAmountCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/WebPortals:InsertStoreRequisitionLines", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/WebPortals", ResponseElementName="InsertStoreRequisitionLines_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/WebPortals", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string InsertStoreRequisitionLines(string reqNo, string itemNo, int aType, string itemDesc, decimal amount, decimal lineAmount, decimal qty, string unitOfMsre, string iStore) {
            object[] results = this.Invoke("InsertStoreRequisitionLines", new object[] {
                        reqNo,
                        itemNo,
                        aType,
                        itemDesc,
                        amount,
                        lineAmount,
                        qty,
                        unitOfMsre,
                        iStore});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void InsertStoreRequisitionLinesAsync(string reqNo, string itemNo, int aType, string itemDesc, decimal amount, decimal lineAmount, decimal qty, string unitOfMsre, string iStore) {
            this.InsertStoreRequisitionLinesAsync(reqNo, itemNo, aType, itemDesc, amount, lineAmount, qty, unitOfMsre, iStore, null);
        }
        
        /// <remarks/>
        public void InsertStoreRequisitionLinesAsync(string reqNo, string itemNo, int aType, string itemDesc, decimal amount, decimal lineAmount, decimal qty, string unitOfMsre, string iStore, object userState) {
            if ((this.InsertStoreRequisitionLinesOperationCompleted == null)) {
                this.InsertStoreRequisitionLinesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnInsertStoreRequisitionLinesOperationCompleted);
            }
            this.InvokeAsync("InsertStoreRequisitionLines", new object[] {
                        reqNo,
                        itemNo,
                        aType,
                        itemDesc,
                        amount,
                        lineAmount,
                        qty,
                        unitOfMsre,
                        iStore}, this.InsertStoreRequisitionLinesOperationCompleted, userState);
        }
        
        private void OnInsertStoreRequisitionLinesOperationCompleted(object arg) {
            if ((this.InsertStoreRequisitionLinesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.InsertStoreRequisitionLinesCompleted(this, new InsertStoreRequisitionLinesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/WebPortals:InsertTenderBid", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/WebPortals", ResponseElementName="InsertTenderBid_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/WebPortals", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string InsertTenderBid(string bidderNo, string tenderNo, string techDocPath, string finDocPath) {
            object[] results = this.Invoke("InsertTenderBid", new object[] {
                        bidderNo,
                        tenderNo,
                        techDocPath,
                        finDocPath});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void InsertTenderBidAsync(string bidderNo, string tenderNo, string techDocPath, string finDocPath) {
            this.InsertTenderBidAsync(bidderNo, tenderNo, techDocPath, finDocPath, null);
        }
        
        /// <remarks/>
        public void InsertTenderBidAsync(string bidderNo, string tenderNo, string techDocPath, string finDocPath, object userState) {
            if ((this.InsertTenderBidOperationCompleted == null)) {
                this.InsertTenderBidOperationCompleted = new System.Threading.SendOrPostCallback(this.OnInsertTenderBidOperationCompleted);
            }
            this.InvokeAsync("InsertTenderBid", new object[] {
                        bidderNo,
                        tenderNo,
                        techDocPath,
                        finDocPath}, this.InsertTenderBidOperationCompleted, userState);
        }
        
        private void OnInsertTenderBidOperationCompleted(object arg) {
            if ((this.InsertTenderBidCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.InsertTenderBidCompleted(this, new InsertTenderBidCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/WebPortals:IsTenderBiddingPeriodOpened", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/WebPortals", ResponseElementName="IsTenderBiddingPeriodOpened_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/WebPortals", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string IsTenderBiddingPeriodOpened(string tenderNo) {
            object[] results = this.Invoke("IsTenderBiddingPeriodOpened", new object[] {
                        tenderNo});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void IsTenderBiddingPeriodOpenedAsync(string tenderNo) {
            this.IsTenderBiddingPeriodOpenedAsync(tenderNo, null);
        }
        
        /// <remarks/>
        public void IsTenderBiddingPeriodOpenedAsync(string tenderNo, object userState) {
            if ((this.IsTenderBiddingPeriodOpenedOperationCompleted == null)) {
                this.IsTenderBiddingPeriodOpenedOperationCompleted = new System.Threading.SendOrPostCallback(this.OnIsTenderBiddingPeriodOpenedOperationCompleted);
            }
            this.InvokeAsync("IsTenderBiddingPeriodOpened", new object[] {
                        tenderNo}, this.IsTenderBiddingPeriodOpenedOperationCompleted, userState);
        }
        
        private void OnIsTenderBiddingPeriodOpenedOperationCompleted(object arg) {
            if ((this.IsTenderBiddingPeriodOpenedCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.IsTenderBiddingPeriodOpenedCompleted(this, new IsTenderBiddingPeriodOpenedCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/WebPortals:PRNApprovalRequest", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/WebPortals", ResponseElementName="PRNApprovalRequest_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/WebPortals", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void PRNApprovalRequest(string reqNo) {
            this.Invoke("PRNApprovalRequest", new object[] {
                        reqNo});
        }
        
        /// <remarks/>
        public void PRNApprovalRequestAsync(string reqNo) {
            this.PRNApprovalRequestAsync(reqNo, null);
        }
        
        /// <remarks/>
        public void PRNApprovalRequestAsync(string reqNo, object userState) {
            if ((this.PRNApprovalRequestOperationCompleted == null)) {
                this.PRNApprovalRequestOperationCompleted = new System.Threading.SendOrPostCallback(this.OnPRNApprovalRequestOperationCompleted);
            }
            this.InvokeAsync("PRNApprovalRequest", new object[] {
                        reqNo}, this.PRNApprovalRequestOperationCompleted, userState);
        }
        
        private void OnPRNApprovalRequestOperationCompleted(object arg) {
            if ((this.PRNApprovalRequestCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.PRNApprovalRequestCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/WebPortals:PurchaseHeaderCreate", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/WebPortals", ResponseElementName="PurchaseHeaderCreate_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/WebPortals", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void PurchaseHeaderCreate(string businessCode, string departmentCode, string responsibilityCentre, string userID, string purpose) {
            this.Invoke("PurchaseHeaderCreate", new object[] {
                        businessCode,
                        departmentCode,
                        responsibilityCentre,
                        userID,
                        purpose});
        }
        
        /// <remarks/>
        public void PurchaseHeaderCreateAsync(string businessCode, string departmentCode, string responsibilityCentre, string userID, string purpose) {
            this.PurchaseHeaderCreateAsync(businessCode, departmentCode, responsibilityCentre, userID, purpose, null);
        }
        
        /// <remarks/>
        public void PurchaseHeaderCreateAsync(string businessCode, string departmentCode, string responsibilityCentre, string userID, string purpose, object userState) {
            if ((this.PurchaseHeaderCreateOperationCompleted == null)) {
                this.PurchaseHeaderCreateOperationCompleted = new System.Threading.SendOrPostCallback(this.OnPurchaseHeaderCreateOperationCompleted);
            }
            this.InvokeAsync("PurchaseHeaderCreate", new object[] {
                        businessCode,
                        departmentCode,
                        responsibilityCentre,
                        userID,
                        purpose}, this.PurchaseHeaderCreateOperationCompleted, userState);
        }
        
        private void OnPurchaseHeaderCreateOperationCompleted(object arg) {
            if ((this.PurchaseHeaderCreateCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.PurchaseHeaderCreateCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/WebPortals:RejectDocument", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/WebPortals", ResponseElementName="RejectDocument_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/WebPortals", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void RejectDocument(string documentNo, string approverID) {
            this.Invoke("RejectDocument", new object[] {
                        documentNo,
                        approverID});
        }
        
        /// <remarks/>
        public void RejectDocumentAsync(string documentNo, string approverID) {
            this.RejectDocumentAsync(documentNo, approverID, null);
        }
        
        /// <remarks/>
        public void RejectDocumentAsync(string documentNo, string approverID, object userState) {
            if ((this.RejectDocumentOperationCompleted == null)) {
                this.RejectDocumentOperationCompleted = new System.Threading.SendOrPostCallback(this.OnRejectDocumentOperationCompleted);
            }
            this.InvokeAsync("RejectDocument", new object[] {
                        documentNo,
                        approverID}, this.RejectDocumentOperationCompleted, userState);
        }
        
        private void OnRejectDocumentOperationCompleted(object arg) {
            if ((this.RejectDocumentCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.RejectDocumentCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/WebPortals:RemoveClaimReqLine", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/WebPortals", ResponseElementName="RemoveClaimReqLine_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/WebPortals", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void RemoveClaimReqLine(string reqNo, string advanceType) {
            this.Invoke("RemoveClaimReqLine", new object[] {
                        reqNo,
                        advanceType});
        }
        
        /// <remarks/>
        public void RemoveClaimReqLineAsync(string reqNo, string advanceType) {
            this.RemoveClaimReqLineAsync(reqNo, advanceType, null);
        }
        
        /// <remarks/>
        public void RemoveClaimReqLineAsync(string reqNo, string advanceType, object userState) {
            if ((this.RemoveClaimReqLineOperationCompleted == null)) {
                this.RemoveClaimReqLineOperationCompleted = new System.Threading.SendOrPostCallback(this.OnRemoveClaimReqLineOperationCompleted);
            }
            this.InvokeAsync("RemoveClaimReqLine", new object[] {
                        reqNo,
                        advanceType}, this.RemoveClaimReqLineOperationCompleted, userState);
        }
        
        private void OnRemoveClaimReqLineOperationCompleted(object arg) {
            if ((this.RemoveClaimReqLineCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.RemoveClaimReqLineCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/WebPortals:RemoveImprestReqLine", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/WebPortals", ResponseElementName="RemoveImprestReqLine_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/WebPortals", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void RemoveImprestReqLine(string reqNo, string advanceType) {
            this.Invoke("RemoveImprestReqLine", new object[] {
                        reqNo,
                        advanceType});
        }
        
        /// <remarks/>
        public void RemoveImprestReqLineAsync(string reqNo, string advanceType) {
            this.RemoveImprestReqLineAsync(reqNo, advanceType, null);
        }
        
        /// <remarks/>
        public void RemoveImprestReqLineAsync(string reqNo, string advanceType, object userState) {
            if ((this.RemoveImprestReqLineOperationCompleted == null)) {
                this.RemoveImprestReqLineOperationCompleted = new System.Threading.SendOrPostCallback(this.OnRemoveImprestReqLineOperationCompleted);
            }
            this.InvokeAsync("RemoveImprestReqLine", new object[] {
                        reqNo,
                        advanceType}, this.RemoveImprestReqLineOperationCompleted, userState);
        }
        
        private void OnRemoveImprestReqLineOperationCompleted(object arg) {
            if ((this.RemoveImprestReqLineCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.RemoveImprestReqLineCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/WebPortals:RemoveJobQualiReqLine", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/WebPortals", ResponseElementName="RemoveJobQualiReqLine_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/WebPortals", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string RemoveJobQualiReqLine(string qualCode, string appNo) {
            object[] results = this.Invoke("RemoveJobQualiReqLine", new object[] {
                        qualCode,
                        appNo});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void RemoveJobQualiReqLineAsync(string qualCode, string appNo) {
            this.RemoveJobQualiReqLineAsync(qualCode, appNo, null);
        }
        
        /// <remarks/>
        public void RemoveJobQualiReqLineAsync(string qualCode, string appNo, object userState) {
            if ((this.RemoveJobQualiReqLineOperationCompleted == null)) {
                this.RemoveJobQualiReqLineOperationCompleted = new System.Threading.SendOrPostCallback(this.OnRemoveJobQualiReqLineOperationCompleted);
            }
            this.InvokeAsync("RemoveJobQualiReqLine", new object[] {
                        qualCode,
                        appNo}, this.RemoveJobQualiReqLineOperationCompleted, userState);
        }
        
        private void OnRemoveJobQualiReqLineOperationCompleted(object arg) {
            if ((this.RemoveJobQualiReqLineCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.RemoveJobQualiReqLineCompleted(this, new RemoveJobQualiReqLineCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/WebPortals:RemovePurchaseLine", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/WebPortals", ResponseElementName="RemovePurchaseLine_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/WebPortals", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void RemovePurchaseLine(int lineNo) {
            this.Invoke("RemovePurchaseLine", new object[] {
                        lineNo});
        }
        
        /// <remarks/>
        public void RemovePurchaseLineAsync(int lineNo) {
            this.RemovePurchaseLineAsync(lineNo, null);
        }
        
        /// <remarks/>
        public void RemovePurchaseLineAsync(int lineNo, object userState) {
            if ((this.RemovePurchaseLineOperationCompleted == null)) {
                this.RemovePurchaseLineOperationCompleted = new System.Threading.SendOrPostCallback(this.OnRemovePurchaseLineOperationCompleted);
            }
            this.InvokeAsync("RemovePurchaseLine", new object[] {
                        lineNo}, this.RemovePurchaseLineOperationCompleted, userState);
        }
        
        private void OnRemovePurchaseLineOperationCompleted(object arg) {
            if ((this.RemovePurchaseLineCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.RemovePurchaseLineCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/WebPortals:RemoveStoreReqLine", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/WebPortals", ResponseElementName="RemoveStoreReqLine_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/WebPortals", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void RemoveStoreReqLine(int lineNo) {
            this.Invoke("RemoveStoreReqLine", new object[] {
                        lineNo});
        }
        
        /// <remarks/>
        public void RemoveStoreReqLineAsync(int lineNo) {
            this.RemoveStoreReqLineAsync(lineNo, null);
        }
        
        /// <remarks/>
        public void RemoveStoreReqLineAsync(int lineNo, object userState) {
            if ((this.RemoveStoreReqLineOperationCompleted == null)) {
                this.RemoveStoreReqLineOperationCompleted = new System.Threading.SendOrPostCallback(this.OnRemoveStoreReqLineOperationCompleted);
            }
            this.InvokeAsync("RemoveStoreReqLine", new object[] {
                        lineNo}, this.RemoveStoreReqLineOperationCompleted, userState);
        }
        
        private void OnRemoveStoreReqLineOperationCompleted(object arg) {
            if ((this.RemoveStoreReqLineCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.RemoveStoreReqLineCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/WebPortals:SaveMemoAttchments", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/WebPortals", ResponseElementName="SaveMemoAttchments_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/WebPortals", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void SaveMemoAttchments(string documentsNoz, string attachmentz, string decriptionz, string username) {
            this.Invoke("SaveMemoAttchments", new object[] {
                        documentsNoz,
                        attachmentz,
                        decriptionz,
                        username});
        }
        
        /// <remarks/>
        public void SaveMemoAttchmentsAsync(string documentsNoz, string attachmentz, string decriptionz, string username) {
            this.SaveMemoAttchmentsAsync(documentsNoz, attachmentz, decriptionz, username, null);
        }
        
        /// <remarks/>
        public void SaveMemoAttchmentsAsync(string documentsNoz, string attachmentz, string decriptionz, string username, object userState) {
            if ((this.SaveMemoAttchmentsOperationCompleted == null)) {
                this.SaveMemoAttchmentsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSaveMemoAttchmentsOperationCompleted);
            }
            this.InvokeAsync("SaveMemoAttchments", new object[] {
                        documentsNoz,
                        attachmentz,
                        decriptionz,
                        username}, this.SaveMemoAttchmentsOperationCompleted, userState);
        }
        
        private void OnSaveMemoAttchmentsOperationCompleted(object arg) {
            if ((this.SaveMemoAttchmentsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SaveMemoAttchmentsCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/WebPortals:SaveMemoAttchmnts", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/WebPortals", ResponseElementName="SaveMemoAttchmnts_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/WebPortals", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void SaveMemoAttchmnts(string documentsNoz, int tblId, string ftype, string filext, System.DateTime attachDT, string attachmentz, string decriptionz, string username) {
            this.Invoke("SaveMemoAttchmnts", new object[] {
                        documentsNoz,
                        tblId,
                        ftype,
                        filext,
                        attachDT,
                        attachmentz,
                        decriptionz,
                        username});
        }
        
        /// <remarks/>
        public void SaveMemoAttchmntsAsync(string documentsNoz, int tblId, string ftype, string filext, System.DateTime attachDT, string attachmentz, string decriptionz, string username) {
            this.SaveMemoAttchmntsAsync(documentsNoz, tblId, ftype, filext, attachDT, attachmentz, decriptionz, username, null);
        }
        
        /// <remarks/>
        public void SaveMemoAttchmntsAsync(string documentsNoz, int tblId, string ftype, string filext, System.DateTime attachDT, string attachmentz, string decriptionz, string username, object userState) {
            if ((this.SaveMemoAttchmntsOperationCompleted == null)) {
                this.SaveMemoAttchmntsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSaveMemoAttchmntsOperationCompleted);
            }
            this.InvokeAsync("SaveMemoAttchmnts", new object[] {
                        documentsNoz,
                        tblId,
                        ftype,
                        filext,
                        attachDT,
                        attachmentz,
                        decriptionz,
                        username}, this.SaveMemoAttchmntsOperationCompleted, userState);
        }
        
        private void OnSaveMemoAttchmntsOperationCompleted(object arg) {
            if ((this.SaveMemoAttchmntsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SaveMemoAttchmntsCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/WebPortals:StoreRequisitionApprovalReques" +
            "t", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/WebPortals", ResponseElementName="StoreRequisitionApprovalRequest_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/WebPortals", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void StoreRequisitionApprovalRequest(string reqNo) {
            this.Invoke("StoreRequisitionApprovalRequest", new object[] {
                        reqNo});
        }
        
        /// <remarks/>
        public void StoreRequisitionApprovalRequestAsync(string reqNo) {
            this.StoreRequisitionApprovalRequestAsync(reqNo, null);
        }
        
        /// <remarks/>
        public void StoreRequisitionApprovalRequestAsync(string reqNo, object userState) {
            if ((this.StoreRequisitionApprovalRequestOperationCompleted == null)) {
                this.StoreRequisitionApprovalRequestOperationCompleted = new System.Threading.SendOrPostCallback(this.OnStoreRequisitionApprovalRequestOperationCompleted);
            }
            this.InvokeAsync("StoreRequisitionApprovalRequest", new object[] {
                        reqNo}, this.StoreRequisitionApprovalRequestOperationCompleted, userState);
        }
        
        private void OnStoreRequisitionApprovalRequestOperationCompleted(object arg) {
            if ((this.StoreRequisitionApprovalRequestCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.StoreRequisitionApprovalRequestCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/WebPortals:StoresRequisitionCreate", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/WebPortals", ResponseElementName="StoresRequisitionCreate_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/WebPortals", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string StoresRequisitionCreate(string employeeNo, string userID, [System.Xml.Serialization.XmlElementAttribute(DataType="date")] System.DateTime requiredDate, string purpose, string department, string campus, string departmentName, string campusName, string responsibilityCentre) {
            object[] results = this.Invoke("StoresRequisitionCreate", new object[] {
                        employeeNo,
                        userID,
                        requiredDate,
                        purpose,
                        department,
                        campus,
                        departmentName,
                        campusName,
                        responsibilityCentre});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void StoresRequisitionCreateAsync(string employeeNo, string userID, System.DateTime requiredDate, string purpose, string department, string campus, string departmentName, string campusName, string responsibilityCentre) {
            this.StoresRequisitionCreateAsync(employeeNo, userID, requiredDate, purpose, department, campus, departmentName, campusName, responsibilityCentre, null);
        }
        
        /// <remarks/>
        public void StoresRequisitionCreateAsync(string employeeNo, string userID, System.DateTime requiredDate, string purpose, string department, string campus, string departmentName, string campusName, string responsibilityCentre, object userState) {
            if ((this.StoresRequisitionCreateOperationCompleted == null)) {
                this.StoresRequisitionCreateOperationCompleted = new System.Threading.SendOrPostCallback(this.OnStoresRequisitionCreateOperationCompleted);
            }
            this.InvokeAsync("StoresRequisitionCreate", new object[] {
                        employeeNo,
                        userID,
                        requiredDate,
                        purpose,
                        department,
                        campus,
                        departmentName,
                        campusName,
                        responsibilityCentre}, this.StoresRequisitionCreateOperationCompleted, userState);
        }
        
        private void OnStoresRequisitionCreateOperationCompleted(object arg) {
            if ((this.StoresRequisitionCreateCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.StoresRequisitionCreateCompleted(this, new StoresRequisitionCreateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/WebPortals:SubmitImprestSurrDetails", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/WebPortals", ResponseElementName="SubmitImprestSurrDetails_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/WebPortals", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string SubmitImprestSurrDetails(string documentNo, decimal actualSpent, decimal cashAmount, string imprestNo) {
            object[] results = this.Invoke("SubmitImprestSurrDetails", new object[] {
                        documentNo,
                        actualSpent,
                        cashAmount,
                        imprestNo});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void SubmitImprestSurrDetailsAsync(string documentNo, decimal actualSpent, decimal cashAmount, string imprestNo) {
            this.SubmitImprestSurrDetailsAsync(documentNo, actualSpent, cashAmount, imprestNo, null);
        }
        
        /// <remarks/>
        public void SubmitImprestSurrDetailsAsync(string documentNo, decimal actualSpent, decimal cashAmount, string imprestNo, object userState) {
            if ((this.SubmitImprestSurrDetailsOperationCompleted == null)) {
                this.SubmitImprestSurrDetailsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSubmitImprestSurrDetailsOperationCompleted);
            }
            this.InvokeAsync("SubmitImprestSurrDetails", new object[] {
                        documentNo,
                        actualSpent,
                        cashAmount,
                        imprestNo}, this.SubmitImprestSurrDetailsOperationCompleted, userState);
        }
        
        private void OnSubmitImprestSurrDetailsOperationCompleted(object arg) {
            if ((this.SubmitImprestSurrDetailsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SubmitImprestSurrDetailsCompleted(this, new SubmitImprestSurrDetailsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/WebPortals:SubmitImprestSurrHeader", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/WebPortals", ResponseElementName="SubmitImprestSurrHeader_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/WebPortals", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string SubmitImprestSurrHeader(string imprestNo) {
            object[] results = this.Invoke("SubmitImprestSurrHeader", new object[] {
                        imprestNo});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void SubmitImprestSurrHeaderAsync(string imprestNo) {
            this.SubmitImprestSurrHeaderAsync(imprestNo, null);
        }
        
        /// <remarks/>
        public void SubmitImprestSurrHeaderAsync(string imprestNo, object userState) {
            if ((this.SubmitImprestSurrHeaderOperationCompleted == null)) {
                this.SubmitImprestSurrHeaderOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSubmitImprestSurrHeaderOperationCompleted);
            }
            this.InvokeAsync("SubmitImprestSurrHeader", new object[] {
                        imprestNo}, this.SubmitImprestSurrHeaderOperationCompleted, userState);
        }
        
        private void OnSubmitImprestSurrHeaderOperationCompleted(object arg) {
            if ((this.SubmitImprestSurrHeaderCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SubmitImprestSurrHeaderCompleted(this, new SubmitImprestSurrHeaderCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/WebPortals:SubmitJobApplicationAttachment" +
            "s", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/WebPortals", ResponseElementName="SubmitJobApplicationAttachments_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/WebPortals", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string SubmitJobApplicationAttachments(string appNo, string cvPath, string coverLetterPath) {
            object[] results = this.Invoke("SubmitJobApplicationAttachments", new object[] {
                        appNo,
                        cvPath,
                        coverLetterPath});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void SubmitJobApplicationAttachmentsAsync(string appNo, string cvPath, string coverLetterPath) {
            this.SubmitJobApplicationAttachmentsAsync(appNo, cvPath, coverLetterPath, null);
        }
        
        /// <remarks/>
        public void SubmitJobApplicationAttachmentsAsync(string appNo, string cvPath, string coverLetterPath, object userState) {
            if ((this.SubmitJobApplicationAttachmentsOperationCompleted == null)) {
                this.SubmitJobApplicationAttachmentsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSubmitJobApplicationAttachmentsOperationCompleted);
            }
            this.InvokeAsync("SubmitJobApplicationAttachments", new object[] {
                        appNo,
                        cvPath,
                        coverLetterPath}, this.SubmitJobApplicationAttachmentsOperationCompleted, userState);
        }
        
        private void OnSubmitJobApplicationAttachmentsOperationCompleted(object arg) {
            if ((this.SubmitJobApplicationAttachmentsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SubmitJobApplicationAttachmentsCompleted(this, new SubmitJobApplicationAttachmentsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/WebPortals:SubmitJobApplication", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/WebPortals", ResponseElementName="SubmitJobApplication_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/WebPortals", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string SubmitJobApplication(string eMail, string firstName, string middletName, string lastName, string jobID, string jobDescription, string refNo) {
            object[] results = this.Invoke("SubmitJobApplication", new object[] {
                        eMail,
                        firstName,
                        middletName,
                        lastName,
                        jobID,
                        jobDescription,
                        refNo});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void SubmitJobApplicationAsync(string eMail, string firstName, string middletName, string lastName, string jobID, string jobDescription, string refNo) {
            this.SubmitJobApplicationAsync(eMail, firstName, middletName, lastName, jobID, jobDescription, refNo, null);
        }
        
        /// <remarks/>
        public void SubmitJobApplicationAsync(string eMail, string firstName, string middletName, string lastName, string jobID, string jobDescription, string refNo, object userState) {
            if ((this.SubmitJobApplicationOperationCompleted == null)) {
                this.SubmitJobApplicationOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSubmitJobApplicationOperationCompleted);
            }
            this.InvokeAsync("SubmitJobApplication", new object[] {
                        eMail,
                        firstName,
                        middletName,
                        lastName,
                        jobID,
                        jobDescription,
                        refNo}, this.SubmitJobApplicationOperationCompleted, userState);
        }
        
        private void OnSubmitJobApplicationOperationCompleted(object arg) {
            if ((this.SubmitJobApplicationCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SubmitJobApplicationCompleted(this, new SubmitJobApplicationCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/WebPortals:SubmitPurchaseLine", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/WebPortals", ResponseElementName="SubmitPurchaseLine_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/WebPortals", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void SubmitPurchaseLine(int documentType, string documentNo, string functionNo, string locationID, [System.Xml.Serialization.XmlElementAttribute(DataType="date")] System.DateTime expectedDate, string functionDesc, string unitsOfMeasure, decimal quantityz) {
            this.Invoke("SubmitPurchaseLine", new object[] {
                        documentType,
                        documentNo,
                        functionNo,
                        locationID,
                        expectedDate,
                        functionDesc,
                        unitsOfMeasure,
                        quantityz});
        }
        
        /// <remarks/>
        public void SubmitPurchaseLineAsync(int documentType, string documentNo, string functionNo, string locationID, System.DateTime expectedDate, string functionDesc, string unitsOfMeasure, decimal quantityz) {
            this.SubmitPurchaseLineAsync(documentType, documentNo, functionNo, locationID, expectedDate, functionDesc, unitsOfMeasure, quantityz, null);
        }
        
        /// <remarks/>
        public void SubmitPurchaseLineAsync(int documentType, string documentNo, string functionNo, string locationID, System.DateTime expectedDate, string functionDesc, string unitsOfMeasure, decimal quantityz, object userState) {
            if ((this.SubmitPurchaseLineOperationCompleted == null)) {
                this.SubmitPurchaseLineOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSubmitPurchaseLineOperationCompleted);
            }
            this.InvokeAsync("SubmitPurchaseLine", new object[] {
                        documentType,
                        documentNo,
                        functionNo,
                        locationID,
                        expectedDate,
                        functionDesc,
                        unitsOfMeasure,
                        quantityz}, this.SubmitPurchaseLineOperationCompleted, userState);
        }
        
        private void OnSubmitPurchaseLineOperationCompleted(object arg) {
            if ((this.SubmitPurchaseLineCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SubmitPurchaseLineCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/WebPortals:SubmitStoreqDetails", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/WebPortals", ResponseElementName="SubmitStoreqDetails_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/WebPortals", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string SubmitStoreqDetails(string actualSpent, string sRNNo, string aknow, string remark) {
            object[] results = this.Invoke("SubmitStoreqDetails", new object[] {
                        actualSpent,
                        sRNNo,
                        aknow,
                        remark});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void SubmitStoreqDetailsAsync(string actualSpent, string sRNNo, string aknow, string remark) {
            this.SubmitStoreqDetailsAsync(actualSpent, sRNNo, aknow, remark, null);
        }
        
        /// <remarks/>
        public void SubmitStoreqDetailsAsync(string actualSpent, string sRNNo, string aknow, string remark, object userState) {
            if ((this.SubmitStoreqDetailsOperationCompleted == null)) {
                this.SubmitStoreqDetailsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSubmitStoreqDetailsOperationCompleted);
            }
            this.InvokeAsync("SubmitStoreqDetails", new object[] {
                        actualSpent,
                        sRNNo,
                        aknow,
                        remark}, this.SubmitStoreqDetailsOperationCompleted, userState);
        }
        
        private void OnSubmitStoreqDetailsOperationCompleted(object arg) {
            if ((this.SubmitStoreqDetailsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SubmitStoreqDetailsCompleted(this, new SubmitStoreqDetailsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/WebPortals:SubmitStoreqHeader", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/WebPortals", ResponseElementName="SubmitStoreqHeader_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/WebPortals", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string SubmitStoreqHeader(string sRNNo) {
            object[] results = this.Invoke("SubmitStoreqHeader", new object[] {
                        sRNNo});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void SubmitStoreqHeaderAsync(string sRNNo) {
            this.SubmitStoreqHeaderAsync(sRNNo, null);
        }
        
        /// <remarks/>
        public void SubmitStoreqHeaderAsync(string sRNNo, object userState) {
            if ((this.SubmitStoreqHeaderOperationCompleted == null)) {
                this.SubmitStoreqHeaderOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSubmitStoreqHeaderOperationCompleted);
            }
            this.InvokeAsync("SubmitStoreqHeader", new object[] {
                        sRNNo}, this.SubmitStoreqHeaderOperationCompleted, userState);
        }
        
        private void OnSubmitStoreqHeaderOperationCompleted(object arg) {
            if ((this.SubmitStoreqHeaderCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SubmitStoreqHeaderCompleted(this, new SubmitStoreqHeaderCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/WebPortals:SubmitbacktoOffice", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/WebPortals", ResponseElementName="SubmitbacktoOffice_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/WebPortals", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string SubmitbacktoOffice(string leaveNo) {
            object[] results = this.Invoke("SubmitbacktoOffice", new object[] {
                        leaveNo});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void SubmitbacktoOfficeAsync(string leaveNo) {
            this.SubmitbacktoOfficeAsync(leaveNo, null);
        }
        
        /// <remarks/>
        public void SubmitbacktoOfficeAsync(string leaveNo, object userState) {
            if ((this.SubmitbacktoOfficeOperationCompleted == null)) {
                this.SubmitbacktoOfficeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSubmitbacktoOfficeOperationCompleted);
            }
            this.InvokeAsync("SubmitbacktoOffice", new object[] {
                        leaveNo}, this.SubmitbacktoOfficeOperationCompleted, userState);
        }
        
        private void OnSubmitbacktoOfficeOperationCompleted(object arg) {
            if ((this.SubmitbacktoOfficeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SubmitbacktoOfficeCompleted(this, new SubmitbacktoOfficeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/WebPortals:TrainingApplication", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/WebPortals", ResponseElementName="TrainingApplication_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/WebPortals", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string TrainingApplication(string employee_Num, string user_Id, string course_code, [System.Xml.Serialization.XmlElementAttribute(DataType="date")] System.DateTime applicationDate) {
            object[] results = this.Invoke("TrainingApplication", new object[] {
                        employee_Num,
                        user_Id,
                        course_code,
                        applicationDate});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void TrainingApplicationAsync(string employee_Num, string user_Id, string course_code, System.DateTime applicationDate) {
            this.TrainingApplicationAsync(employee_Num, user_Id, course_code, applicationDate, null);
        }
        
        /// <remarks/>
        public void TrainingApplicationAsync(string employee_Num, string user_Id, string course_code, System.DateTime applicationDate, object userState) {
            if ((this.TrainingApplicationOperationCompleted == null)) {
                this.TrainingApplicationOperationCompleted = new System.Threading.SendOrPostCallback(this.OnTrainingApplicationOperationCompleted);
            }
            this.InvokeAsync("TrainingApplication", new object[] {
                        employee_Num,
                        user_Id,
                        course_code,
                        applicationDate}, this.TrainingApplicationOperationCompleted, userState);
        }
        
        private void OnTrainingApplicationOperationCompleted(object arg) {
            if ((this.TrainingApplicationCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.TrainingApplicationCompleted(this, new TrainingApplicationCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/WebPortals:TransportRequisitionApprovalRe" +
            "quest", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/WebPortals", ResponseElementName="TransportRequisitionApprovalRequest_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/WebPortals", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void TransportRequisitionApprovalRequest(string reqNo) {
            this.Invoke("TransportRequisitionApprovalRequest", new object[] {
                        reqNo});
        }
        
        /// <remarks/>
        public void TransportRequisitionApprovalRequestAsync(string reqNo) {
            this.TransportRequisitionApprovalRequestAsync(reqNo, null);
        }
        
        /// <remarks/>
        public void TransportRequisitionApprovalRequestAsync(string reqNo, object userState) {
            if ((this.TransportRequisitionApprovalRequestOperationCompleted == null)) {
                this.TransportRequisitionApprovalRequestOperationCompleted = new System.Threading.SendOrPostCallback(this.OnTransportRequisitionApprovalRequestOperationCompleted);
            }
            this.InvokeAsync("TransportRequisitionApprovalRequest", new object[] {
                        reqNo}, this.TransportRequisitionApprovalRequestOperationCompleted, userState);
        }
        
        private void OnTransportRequisitionApprovalRequestOperationCompleted(object arg) {
            if ((this.TransportRequisitionApprovalRequestCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.TransportRequisitionApprovalRequestCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/WebPortals:UpdateStaffPass", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/WebPortals", ResponseElementName="UpdateStaffPass_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/WebPortals", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string UpdateStaffPass(string username, string genpass) {
            object[] results = this.Invoke("UpdateStaffPass", new object[] {
                        username,
                        genpass});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void UpdateStaffPassAsync(string username, string genpass) {
            this.UpdateStaffPassAsync(username, genpass, null);
        }
        
        /// <remarks/>
        public void UpdateStaffPassAsync(string username, string genpass, object userState) {
            if ((this.UpdateStaffPassOperationCompleted == null)) {
                this.UpdateStaffPassOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateStaffPassOperationCompleted);
            }
            this.InvokeAsync("UpdateStaffPass", new object[] {
                        username,
                        genpass}, this.UpdateStaffPassOperationCompleted, userState);
        }
        
        private void OnUpdateStaffPassOperationCompleted(object arg) {
            if ((this.UpdateStaffPassCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateStaffPassCompleted(this, new UpdateStaffPassCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/WebPortals:ValidRecruitmentEmailAddress", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/WebPortals", ResponseElementName="ValidRecruitmentEmailAddress_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/WebPortals", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string ValidRecruitmentEmailAddress(string username) {
            object[] results = this.Invoke("ValidRecruitmentEmailAddress", new object[] {
                        username});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void ValidRecruitmentEmailAddressAsync(string username) {
            this.ValidRecruitmentEmailAddressAsync(username, null);
        }
        
        /// <remarks/>
        public void ValidRecruitmentEmailAddressAsync(string username, object userState) {
            if ((this.ValidRecruitmentEmailAddressOperationCompleted == null)) {
                this.ValidRecruitmentEmailAddressOperationCompleted = new System.Threading.SendOrPostCallback(this.OnValidRecruitmentEmailAddressOperationCompleted);
            }
            this.InvokeAsync("ValidRecruitmentEmailAddress", new object[] {
                        username}, this.ValidRecruitmentEmailAddressOperationCompleted, userState);
        }
        
        private void OnValidRecruitmentEmailAddressOperationCompleted(object arg) {
            if ((this.ValidRecruitmentEmailAddressCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ValidRecruitmentEmailAddressCompleted(this, new ValidRecruitmentEmailAddressCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/WebPortals:ValidateCustomerNumber", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/WebPortals", ResponseElementName="ValidateCustomerNumber_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/WebPortals", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string ValidateCustomerNumber(string idNo) {
            object[] results = this.Invoke("ValidateCustomerNumber", new object[] {
                        idNo});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void ValidateCustomerNumberAsync(string idNo) {
            this.ValidateCustomerNumberAsync(idNo, null);
        }
        
        /// <remarks/>
        public void ValidateCustomerNumberAsync(string idNo, object userState) {
            if ((this.ValidateCustomerNumberOperationCompleted == null)) {
                this.ValidateCustomerNumberOperationCompleted = new System.Threading.SendOrPostCallback(this.OnValidateCustomerNumberOperationCompleted);
            }
            this.InvokeAsync("ValidateCustomerNumber", new object[] {
                        idNo}, this.ValidateCustomerNumberOperationCompleted, userState);
        }
        
        private void OnValidateCustomerNumberOperationCompleted(object arg) {
            if ((this.ValidateCustomerNumberCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ValidateCustomerNumberCompleted(this, new ValidateCustomerNumberCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/WebPortals:ValidateStartDate", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/WebPortals", ResponseElementName="ValidateStartDate_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/WebPortals", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void ValidateStartDate([System.Xml.Serialization.XmlElementAttribute(DataType="date")] System.DateTime starting_Date) {
            this.Invoke("ValidateStartDate", new object[] {
                        starting_Date});
        }
        
        /// <remarks/>
        public void ValidateStartDateAsync(System.DateTime starting_Date) {
            this.ValidateStartDateAsync(starting_Date, null);
        }
        
        /// <remarks/>
        public void ValidateStartDateAsync(System.DateTime starting_Date, object userState) {
            if ((this.ValidateStartDateOperationCompleted == null)) {
                this.ValidateStartDateOperationCompleted = new System.Threading.SendOrPostCallback(this.OnValidateStartDateOperationCompleted);
            }
            this.InvokeAsync("ValidateStartDate", new object[] {
                        starting_Date}, this.ValidateStartDateOperationCompleted, userState);
        }
        
        private void OnValidateStartDateOperationCompleted(object arg) {
            if ((this.ValidateStartDateCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ValidateStartDateCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/WebPortals:VerifyCurrentPassword", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/WebPortals", ResponseElementName="VerifyCurrentPassword_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/WebPortals", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string VerifyCurrentPassword(string username, string oldpass) {
            object[] results = this.Invoke("VerifyCurrentPassword", new object[] {
                        username,
                        oldpass});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void VerifyCurrentPasswordAsync(string username, string oldpass) {
            this.VerifyCurrentPasswordAsync(username, oldpass, null);
        }
        
        /// <remarks/>
        public void VerifyCurrentPasswordAsync(string username, string oldpass, object userState) {
            if ((this.VerifyCurrentPasswordOperationCompleted == null)) {
                this.VerifyCurrentPasswordOperationCompleted = new System.Threading.SendOrPostCallback(this.OnVerifyCurrentPasswordOperationCompleted);
            }
            this.InvokeAsync("VerifyCurrentPassword", new object[] {
                        username,
                        oldpass}, this.VerifyCurrentPasswordOperationCompleted, userState);
        }
        
        private void OnVerifyCurrentPasswordOperationCompleted(object arg) {
            if ((this.VerifyCurrentPasswordCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.VerifyCurrentPasswordCompleted(this, new VerifyCurrentPasswordCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/WebPortals:getEmployeeName", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/WebPortals", ResponseElementName="getEmployeeName_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/WebPortals", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string getEmployeeName(string staffNum) {
            object[] results = this.Invoke("getEmployeeName", new object[] {
                        staffNum});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void getEmployeeNameAsync(string staffNum) {
            this.getEmployeeNameAsync(staffNum, null);
        }
        
        /// <remarks/>
        public void getEmployeeNameAsync(string staffNum, object userState) {
            if ((this.getEmployeeNameOperationCompleted == null)) {
                this.getEmployeeNameOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetEmployeeNameOperationCompleted);
            }
            this.InvokeAsync("getEmployeeName", new object[] {
                        staffNum}, this.getEmployeeNameOperationCompleted, userState);
        }
        
        private void OngetEmployeeNameOperationCompleted(object arg) {
            if ((this.getEmployeeNameCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getEmployeeNameCompleted(this, new getEmployeeNameCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void ApproveDocumentCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void AvailableLeaveDaysCompletedEventHandler(object sender, AvailableLeaveDaysCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AvailableLeaveDaysCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AvailableLeaveDaysCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void AvailableLeaveDayssCompletedEventHandler(object sender, AvailableLeaveDayssCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AvailableLeaveDayssCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AvailableLeaveDayssCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void Back2officedetailsCompletedEventHandler(object sender, Back2officedetailsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Back2officedetailsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Back2officedetailsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void BacktOfficeApplicationCompletedEventHandler(object sender, BacktOfficeApplicationCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class BacktOfficeApplicationCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal BacktOfficeApplicationCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void CalcEndDateCompletedEventHandler(object sender, CalcEndDateCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CalcEndDateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CalcEndDateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.DateTime Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.DateTime)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void CalcReturnDateCompletedEventHandler(object sender, CalcReturnDateCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CalcReturnDateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CalcReturnDateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.DateTime Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.DateTime)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void CancelApprovalRequestCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void CancelClaimRequisitionCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void CancelDocumentCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void CancelImprestRequisitionCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void CancelPrnApprovalRequestCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void CancelStoreRequisitionCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void ChangeBidderPasswordCompletedEventHandler(object sender, ChangeBidderPasswordCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ChangeBidderPasswordCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ChangeBidderPasswordCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void ChangeStaffPasswordCompletedEventHandler(object sender, ChangeStaffPasswordCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ChangeStaffPasswordCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ChangeStaffPasswordCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void CheckBidderLoginForUnchangedPassCompletedEventHandler(object sender, CheckBidderLoginForUnchangedPassCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CheckBidderLoginForUnchangedPassCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CheckBidderLoginForUnchangedPassCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void CheckBidderLoginCompletedEventHandler(object sender, CheckBidderLoginCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CheckBidderLoginCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CheckBidderLoginCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void CheckBidderPasswordChangedCompletedEventHandler(object sender, CheckBidderPasswordChangedCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CheckBidderPasswordChangedCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CheckBidderPasswordChangedCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void CheckRecruitmentApplicantLoginCompletedEventHandler(object sender, CheckRecruitmentApplicantLoginCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CheckRecruitmentApplicantLoginCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CheckRecruitmentApplicantLoginCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void CheckStaffLoginForUnchangedPassCompletedEventHandler(object sender, CheckStaffLoginForUnchangedPassCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CheckStaffLoginForUnchangedPassCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CheckStaffLoginForUnchangedPassCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void CheckStaffLoginCompletedEventHandler(object sender, CheckStaffLoginCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CheckStaffLoginCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CheckStaffLoginCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void CheckStaffPasswordChangedCompletedEventHandler(object sender, CheckStaffPasswordChangedCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CheckStaffPasswordChangedCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CheckStaffPasswordChangedCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void CheckValidBidderNoCompletedEventHandler(object sender, CheckValidBidderNoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CheckValidBidderNoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CheckValidBidderNoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void CheckValidStaffNoCompletedEventHandler(object sender, CheckValidStaffNoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CheckValidStaffNoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CheckValidStaffNoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void ClaimRequisitionApprovalRequestCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void ClaimRequisitionCreateCompletedEventHandler(object sender, ClaimRequisitionCreateCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ClaimRequisitionCreateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ClaimRequisitionCreateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void CreateBidderAccountCompletedEventHandler(object sender, CreateBidderAccountCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CreateBidderAccountCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CreateBidderAccountCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void CreateOnlineCustomerCompletedEventHandler(object sender, CreateOnlineCustomerCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CreateOnlineCustomerCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CreateOnlineCustomerCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void CreateRecruitmentAccountCompletedEventHandler(object sender, CreateRecruitmentAccountCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CreateRecruitmentAccountCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CreateRecruitmentAccountCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void Create_Order_HeaderCompletedEventHandler(object sender, Create_Order_HeaderCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Create_Order_HeaderCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Create_Order_HeaderCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void Create_Order_LinesCompletedEventHandler(object sender, Create_Order_LinesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Create_Order_LinesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Create_Order_LinesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void DetermineIfIncludesNonWorkingCompletedEventHandler(object sender, DetermineIfIncludesNonWorkingCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DetermineIfIncludesNonWorkingCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DetermineIfIncludesNonWorkingCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string fLeaveCode {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void DetermineIfIsNonWorkingCompletedEventHandler(object sender, DetermineIfIsNonWorkingCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DetermineIfIsNonWorkingCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DetermineIfIsNonWorkingCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public System.DateTime bcDate {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.DateTime)(this.results[1]));
            }
        }
        
        /// <remarks/>
        public string leave_Type {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[2]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void DetermineLeaveReturnDateCompletedEventHandler(object sender, DetermineLeaveReturnDateCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DetermineLeaveReturnDateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DetermineLeaveReturnDateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.DateTime Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.DateTime)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void GenerateLeaveStatementCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void GenerateMemoReportCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void GeneratePaySlipReport1CompletedEventHandler(object sender, GeneratePaySlipReport1CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GeneratePaySlipReport1CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GeneratePaySlipReport1CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void GeneratePaySlipReport3CompletedEventHandler(object sender, GeneratePaySlipReport3CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GeneratePaySlipReport3CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GeneratePaySlipReport3CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void GeneratePayslipReportCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void GenerateTenderAwardLetterCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void Generatep9ReportCompletedEventHandler(object sender, Generatep9ReportCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Generatep9ReportCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Generatep9ReportCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void GetAdvertisedJobsCompletedEventHandler(object sender, GetAdvertisedJobsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetAdvertisedJobsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetAdvertisedJobsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void GetApprovalStatusCompletedEventHandler(object sender, GetApprovalStatusCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetApprovalStatusCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetApprovalStatusCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void GetBidderCurrentPasswordCompletedEventHandler(object sender, GetBidderCurrentPasswordCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetBidderCurrentPasswordCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetBidderCurrentPasswordCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void GetBidderMailCompletedEventHandler(object sender, GetBidderMailCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetBidderMailCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetBidderMailCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void GetBidderProfileDetailsCompletedEventHandler(object sender, GetBidderProfileDetailsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetBidderProfileDetailsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetBidderProfileDetailsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void GetCurrentPasswordCompletedEventHandler(object sender, GetCurrentPasswordCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetCurrentPasswordCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetCurrentPasswordCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void GetCurrentRecruitmentPasswordCompletedEventHandler(object sender, GetCurrentRecruitmentPasswordCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetCurrentRecruitmentPasswordCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetCurrentRecruitmentPasswordCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void GetLastPRNNoCompletedEventHandler(object sender, GetLastPRNNoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetLastPRNNoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetLastPRNNoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void GetLeaveDetailsCompletedEventHandler(object sender, GetLeaveDetailsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetLeaveDetailsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetLeaveDetailsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void GetMonthNameCompletedEventHandler(object sender, GetMonthNameCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetMonthNameCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetMonthNameCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void GetMyStoreRequisitionsCompletedEventHandler(object sender, GetMyStoreRequisitionsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetMyStoreRequisitionsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetMyStoreRequisitionsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void GetPRLEmployeeTransactionsCompletedEventHandler(object sender, GetPRLEmployeeTransactionsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetPRLEmployeeTransactionsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetPRLEmployeeTransactionsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void GetPRNHeaderDetailsCompletedEventHandler(object sender, GetPRNHeaderDetailsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetPRNHeaderDetailsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetPRNHeaderDetailsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void GetPayslipMonthsCompletedEventHandler(object sender, GetPayslipMonthsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetPayslipMonthsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetPayslipMonthsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void GetPayslipYearsCompletedEventHandler(object sender, GetPayslipYearsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetPayslipYearsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetPayslipYearsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void GetProfilePictureCompletedEventHandler(object sender, GetProfilePictureCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetProfilePictureCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetProfilePictureCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void GetRecruitmentEmailAddressCompletedEventHandler(object sender, GetRecruitmentEmailAddressCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetRecruitmentEmailAddressCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetRecruitmentEmailAddressCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void GetStaffDetailsCompletedEventHandler(object sender, GetStaffDetailsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetStaffDetailsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetStaffDetailsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void GetStaffGenderCompletedEventHandler(object sender, GetStaffGenderCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetStaffGenderCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetStaffGenderCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void GetStaffMailCompletedEventHandler(object sender, GetStaffMailCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetStaffMailCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetStaffMailCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void GetStaffProfileDetailsCompletedEventHandler(object sender, GetStaffProfileDetailsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetStaffProfileDetailsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetStaffProfileDetailsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void GetVendorProfileDetailsCompletedEventHandler(object sender, GetVendorProfileDetailsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetVendorProfileDetailsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetVendorProfileDetailsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void HRCancelLeaveApplicationCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void HRLeaveApplicationCompletedEventHandler(object sender, HRLeaveApplicationCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class HRLeaveApplicationCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal HRLeaveApplicationCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void ImprestRequisitionApprovalRequestCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void ImprestRequisitionCreateCompletedEventHandler(object sender, ImprestRequisitionCreateCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ImprestRequisitionCreateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ImprestRequisitionCreateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void InsertApproverCommentsCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void InsertClaimRequisitionLinesCompletedEventHandler(object sender, InsertClaimRequisitionLinesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class InsertClaimRequisitionLinesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal InsertClaimRequisitionLinesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void InsertImprestRequisitionLinesCompletedEventHandler(object sender, InsertImprestRequisitionLinesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class InsertImprestRequisitionLinesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal InsertImprestRequisitionLinesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void InsertJobApplicantQualificationsCompletedEventHandler(object sender, InsertJobApplicantQualificationsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class InsertJobApplicantQualificationsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal InsertJobApplicantQualificationsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void InsertQuotedAmountCompletedEventHandler(object sender, InsertQuotedAmountCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class InsertQuotedAmountCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal InsertQuotedAmountCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void InsertStoreRequisitionLinesCompletedEventHandler(object sender, InsertStoreRequisitionLinesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class InsertStoreRequisitionLinesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal InsertStoreRequisitionLinesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void InsertTenderBidCompletedEventHandler(object sender, InsertTenderBidCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class InsertTenderBidCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal InsertTenderBidCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void IsTenderBiddingPeriodOpenedCompletedEventHandler(object sender, IsTenderBiddingPeriodOpenedCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class IsTenderBiddingPeriodOpenedCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal IsTenderBiddingPeriodOpenedCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void PRNApprovalRequestCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void PurchaseHeaderCreateCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void RejectDocumentCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void RemoveClaimReqLineCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void RemoveImprestReqLineCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void RemoveJobQualiReqLineCompletedEventHandler(object sender, RemoveJobQualiReqLineCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class RemoveJobQualiReqLineCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal RemoveJobQualiReqLineCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void RemovePurchaseLineCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void RemoveStoreReqLineCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void SaveMemoAttchmentsCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void SaveMemoAttchmntsCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void StoreRequisitionApprovalRequestCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void StoresRequisitionCreateCompletedEventHandler(object sender, StoresRequisitionCreateCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class StoresRequisitionCreateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal StoresRequisitionCreateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void SubmitImprestSurrDetailsCompletedEventHandler(object sender, SubmitImprestSurrDetailsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SubmitImprestSurrDetailsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SubmitImprestSurrDetailsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void SubmitImprestSurrHeaderCompletedEventHandler(object sender, SubmitImprestSurrHeaderCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SubmitImprestSurrHeaderCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SubmitImprestSurrHeaderCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void SubmitJobApplicationAttachmentsCompletedEventHandler(object sender, SubmitJobApplicationAttachmentsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SubmitJobApplicationAttachmentsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SubmitJobApplicationAttachmentsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void SubmitJobApplicationCompletedEventHandler(object sender, SubmitJobApplicationCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SubmitJobApplicationCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SubmitJobApplicationCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void SubmitPurchaseLineCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void SubmitStoreqDetailsCompletedEventHandler(object sender, SubmitStoreqDetailsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SubmitStoreqDetailsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SubmitStoreqDetailsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void SubmitStoreqHeaderCompletedEventHandler(object sender, SubmitStoreqHeaderCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SubmitStoreqHeaderCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SubmitStoreqHeaderCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void SubmitbacktoOfficeCompletedEventHandler(object sender, SubmitbacktoOfficeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SubmitbacktoOfficeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SubmitbacktoOfficeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void TrainingApplicationCompletedEventHandler(object sender, TrainingApplicationCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class TrainingApplicationCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal TrainingApplicationCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void TransportRequisitionApprovalRequestCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void UpdateStaffPassCompletedEventHandler(object sender, UpdateStaffPassCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateStaffPassCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateStaffPassCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void ValidRecruitmentEmailAddressCompletedEventHandler(object sender, ValidRecruitmentEmailAddressCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ValidRecruitmentEmailAddressCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ValidRecruitmentEmailAddressCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void ValidateCustomerNumberCompletedEventHandler(object sender, ValidateCustomerNumberCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ValidateCustomerNumberCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ValidateCustomerNumberCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void ValidateStartDateCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void VerifyCurrentPasswordCompletedEventHandler(object sender, VerifyCurrentPasswordCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class VerifyCurrentPasswordCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal VerifyCurrentPasswordCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void getEmployeeNameCompletedEventHandler(object sender, getEmployeeNameCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getEmployeeNameCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getEmployeeNameCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591